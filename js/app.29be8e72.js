(function(n){function t(t){for(var i,a,l=t[0],s=t[1],c=t[2],d=0,p=[];d<l.length;d++)a=l[d],r[a]&&p.push(r[a][0]),r[a]=0;for(i in s)Object.prototype.hasOwnProperty.call(s,i)&&(n[i]=s[i]);u&&u(t);while(p.length)p.shift()();return o.push.apply(o,c||[]),e()}function e(){for(var n,t=0;t<o.length;t++){for(var e=o[t],i=!0,l=1;l<e.length;l++){var s=e[l];0!==r[s]&&(i=!1)}i&&(o.splice(t--,1),n=a(a.s=e[0]))}return n}var i={},r={app:0},o=[];function a(t){if(i[t])return i[t].exports;var e=i[t]={i:t,l:!1,exports:{}};return n[t].call(e.exports,e,e.exports,a),e.l=!0,e.exports}a.m=n,a.c=i,a.d=function(n,t,e){a.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:e})},a.r=function(n){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},a.t=function(n,t){if(1&t&&(n=a(n)),8&t)return n;if(4&t&&"object"===typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(a.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var i in n)a.d(e,i,function(t){return n[t]}.bind(null,i));return e},a.n=function(n){var t=n&&n.__esModule?function(){return n["default"]}:function(){return n};return a.d(t,"a",t),t},a.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},a.p="/";var l=window["webpackJsonp"]=window["webpackJsonp"]||[],s=l.push.bind(l);l.push=t,l=l.slice();for(var c=0;c<l.length;c++)t(l[c]);var u=s;o.push([0,"chunk-vendors"]),e()})({0:function(n,t,e){n.exports=e("56d7")},"06df":function(n,t,e){},"1ab3":function(n,t,e){n.exports=e.p+"img/04.68873e83.png"},"1bc9":function(n,t,e){"use strict";var i=e("62b8"),r=e.n(i);r.a},"21dd":function(n,t,e){n.exports=e.p+"img/logo.bc660e78.png"},"27c9":function(n,t,e){},"3a1c":function(n,t,e){"use strict";var i=e("f403"),r=e.n(i);r.a},"4a45":function(n,t,e){n.exports=e.p+"img/02.f68ee378.png"},5031:function(n,t,e){"use strict";var i=e("827f"),r=e.n(i);r.a},"56d7":function(n,t,e){"use strict";e.r(t);e("14c6"),e("08c1"),e("4842"),e("d9fc");var i,r,o=e("2b0e"),a=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{attrs:{id:"app"}},[e("HelloWorld",{attrs:{routerImage:n.routerImage,windowSize:n.windowSize}}),e("transition",{attrs:{name:"slide-fade"}},[e("router-view",{style:{"min-height":n.windowSize.height+"px"}})],1)],1)},l=[],s=(e("28a5"),function(){var n=this,t=n.$createElement,i=n._self._c||t;return i("div",{staticClass:"hello"},[i("div",{staticClass:"bgColor",style:{background:n.colorMsg}}),n.routerTitle[n.routerImage].img?i("div",{staticClass:"bgImage",style:{"background-image":"url("+n.imageBg.data[n.imageBg.num]+")"}}):n._e(),n.routerTitle[n.routerImage]?i("h1",{staticClass:"router_title",style:{width:n.windowSize.width>700?.7*n.windowSize.width+"px":"auto","font-size":n.windowSize.width>700?"2em":"1em",background:n.colorTitle}},[n._v(n._s(n.routerTitle[n.routerImage].title))]):n._e(),i("router-link",{staticClass:"meIcon",style:{"border-color":"me"==n.routerImage?"#42b983":"#3d3d3d",background:"rgba(33, 150, 243, 0.8)"},attrs:{to:"/me"}},["me"==n.routerImage?i("div",{staticClass:"mephotoBox"},[i("div",{staticClass:"mephotoAni"})]):n._e(),i("img",{attrs:{alt:"logo",width:"80px",height:"80px",src:e("21dd")}})])],1)}),c=[],u=(e("6d67"),{data:function(){return{routerTitle:{index:{img:!0,type:"",title:"My component and self introduction",router:"",Introduction:""},me:{img:!0,type:"app",title:"introduction",router:"/me",Introduction:""},foo:{img:!0,type:"app",title:"vue-drag-screenshot",router:"/foo",Introduction:"A Vue component to drag-screenshot"},inputTags:{img:!0,type:"app",title:"vue-input-tags",router:"/inputTags",Introduction:"A Vue component to input-tags"},mind:{img:!0,type:"app",title:"vue-mind-mapping",router:"/mind",Introduction:"一个类似思维导图的小工具"},threeBtn:{img:!0,type:"app",title:"vue-3d-button",router:"/threeBtn",Introduction:"A Vue component to 3d-button"},jsFs:{img:!1,type:"text",title:"js 开发常用工具函数",router:"/file?type=jsFs",Introduction:"function ( ) { }"},regular:{img:!1,type:"text",title:"js 开发常用正则表达式",router:"/file?type=regular",Introduction:"var patt1 = new RegExp(/^[A-Z]+$/)"},vueCli:{img:!1,type:"text",title:"vue-cli插件开发",router:"/file?type=vueCli",Introduction:"vue-cli 3.x 开发插件并发布到 npm"},css:{img:!1,type:"text",title:"CSS 继承深度解析",router:"/file?type=css",Introduction:"灵活，高效并且易维护的css"}}}}}),d=u,p=e("2877"),m=Object(p["a"])(d,i,r,!1,null,null,null),f=m.exports,h={name:"HelloWorld",mixins:[f],data:function(){return{colorMsg:"linear-gradient(45deg, #dfb7be 0%, #48afcd 33%, #c96277 66%, #c35fdf 100%)",colorTitle:"linear-gradient(45deg, #dfb7be 0%, #48afcd 33%, #c96277 66%, #c35fdf 100%)",imageBg:{data:[e("8630"),e("4a45"),e("add7"),e("1ab3"),e("c5df"),e("d2f5")],num:0}}},props:{routerImage:{type:String,default:"index"},windowSize:{type:Object,default:{width:1920,height:1080}}},watch:{routerImage:function(n,t){this.getImageBg(),this.colorMsg=this.getHslArray(8),this.colorTitle=this.getHslArray(3)}},mounted:function(){this.getImageBg()},methods:{getImageBg:function(){var n=this,t=function t(){var e=Math.floor(Math.random()*n.imageBg.data.length);n.imageBg.num==e?t():n.imageBg.num=e};t()},hslToRgb:function(n,t,e){var i,r,o;if(0===+t)i=r=o=e;else{var a=function(n,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?n+6*(t-n)*e:e<.5?t:e<2/3?n+(t-n)*(2/3-e)*6:n},l=e<.5?e*(1+t):e+t-e*t,s=2*e-l;i=a(s,l,n+1/3),r=a(s,l,n),o=a(s,l,n-1/3)}return[Math.round(255*i),Math.round(255*r),Math.round(255*o)]},randomHsl:function(){var n=Math.random(),t=Math.random(),e=Math.random();return[n,t,e]},getHslArray:function(n){for(var t=this,e=[],i=n||4,r="linear-gradient(45deg, ",o=100/(i-1),a=0;a<i;a++){var l=this.randomHsl();a>0&&Math.abs(l[0]-e[a-1][0])<.25?a--:(l[1]=.7+.2*l[1],l[2]=.4+.4*l[2],l=l.map(function(n){return parseFloat(n.toFixed(2))}),e.push(l))}for(var s=e.map(function(n){return t.hslToRgb.apply(t,n)}),c=0;c<i;c++){var u="rgb("+s[c].join(", ")+")";r+=c==i-1?u+" 100%)":u+" "+Math.round(c*o)+"%, "}return r}}},g=h,v=(e("5031"),Object(p["a"])(g,s,c,!1,null,"613b2d72",null)),b=v.exports,y={name:"app",data:function(){return{routerImage:"index",windowSize:{width:1920,height:1080}}},watch:{"$route.path":function(n,t){this.splitRouter(n)}},beforeRouteUpdate:function(n,t,e){},mounted:function(){var n=this;this.splitRouter(this.$route.path),this.windowSize.height=document.documentElement.clientHeight,this.windowSize.width=document.documentElement.clientWidth,window.onresize=function(){return function(){n.windowSize.height=document.documentElement.clientHeight,n.windowSize.width=document.documentElement.clientWidth}()}},methods:{splitRouter:function(n){var t=n.split("/")[1];this.routerImage=t||"index","file"==this.routerImage&&(this.routerImage=this.$route.query.type||"jsFs")}},components:{HelloWorld:b}},w=y,x=(e("5c0b"),Object(p["a"])(w,a,l,!1,null,null,null)),S=x.exports,_=e("2f62");o["a"].use(_["a"]);var k,C,j,A,I,z,M,O,E,F,T=new _["a"].Store({state:{},mutations:{},actions:{}}),B=e("8c4f"),L=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"hello",style:{width:n.windowSize.width>700?.5*n.windowSize.width+"px":.95*n.windowSize.width+"px"}},[e("ReturnIcon",{attrs:{dataArray:n.routerTitle,returnIcon:!1},model:{value:n.dataArray,callback:function(t){n.dataArray=t},expression:"dataArray"}}),n._l(n.dataArray,function(t){return t.type?e("div",{staticClass:"listLine"},["text"==t.type?e("i",{staticClass:"iconPosition icon-file-text"}):n._e(),"app"==t.type?e("i",{staticClass:"iconPosition icon-github"}):n._e(),e("span",{staticClass:"routerTitle"},[e("router-link",{staticStyle:{color:"#000"},attrs:{to:t.router}},[e("span",{staticClass:"listTitle"},[n._v(n._s(t.title))])])],1),t.Introduction?e("span",{staticClass:"listDescription"},[n._v("\n      "+n._s(t.Introduction)+"\n    ")]):n._e()]):n._e()})],2)},Y=[],D=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"returnList"},[n.returnIcon?e("span",{staticClass:"index_icon"},[e("router-link",{attrs:{to:"/"}},[e("i",{staticClass:"icon-chevron-sign-left"})])],1):n._e(),n.search?e("div",{staticClass:"searchBox"},[e("i",{staticClass:"icon-search"}),e("input",{directives:[{name:"model",rawName:"v-model",value:n.searchSwitch.message,expression:"searchSwitch.message"}],staticClass:"input_message",attrs:{placeholder:"请输入文字"},domProps:{value:n.searchSwitch.message},on:{input:function(t){t.target.composing||n.$set(n.searchSwitch,"message",t.target.value)}}})]):n._e()])},$=[],N=(e("6b54"),e("87b3"),e("57e7"),e("7f7f"),{name:"ReturnList",data:function(){return{searchSwitch:{message:"",dataArray:[]}}},props:{routerUrl:{type:String,default:"index"},search:{type:Boolean,default:!0},returnIcon:{type:Boolean,default:!0},dataArray:{default:[]}},watch:{"searchSwitch.message":function(n,t){this.searchDataArray(n)}},model:{prop:"value",event:"update_value"},mounted:function(){this.$emit("update_value",this.dataArray)},methods:{searchDataArray:function(n){n||this.$emit("update_value",this.dataArray);var t=this.isObject(this.dataArray),e=[];if("Object"==t){for(var i in e={},this.dataArray){var r=this.dataArray[i];r.type&&-1!=r.title.indexOf(n)&&(e[i]=Object.assign({},r))}this.$emit("update_value",e)}if("Array"==t){for(var o=0;o<this.dataArray.length;o++){var a=this.dataArray[o];-1!=a.title.indexOf(n)&&e.push(a)}this.$emit("update_value",e)}},isObject:function(n){return Object.prototype.toString.call(n).slice(8,-1)}}}),H=N,P=(e("571a"),Object(p["a"])(H,D,$,!1,null,"5d69c32a",null)),R=P.exports,V={data:function(){return{windowSize:{width:1920,height:1080},dataArray:[]}},computed:{},props:[],watch:{},mounted:function(){var n=this;this.windowSize.height=document.documentElement.clientHeight,this.windowSize.width=document.documentElement.clientWidth,window.onresize=function(){return function(){n.windowSize.height=document.documentElement.clientHeight,n.windowSize.width=document.documentElement.clientWidth}()}},methods:{},components:{ReturnIcon:R}},q=V,U=Object(p["a"])(q,k,C,!1,null,null,null),J=U.exports,W={name:"home",mixins:[J,f],data:function(){return{dataArray:{}}}},Z=W,X=(e("72e7"),Object(p["a"])(Z,L,Y,!1,null,"d52fe578",null)),K=X.exports,G=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"hello",style:{width:n.windowSize.width>700?.8*n.windowSize.width+"px":.95*n.windowSize.width+"px"}},[e("ReturnIcon",{attrs:{dataArray:[],search:!1},model:{value:n.dataArray,callback:function(t){n.dataArray=t},expression:"dataArray"}}),.8*n.windowSize.width>1e3?e("div",{staticStyle:{display:"flex"}},[e("div",{staticClass:"linebox"},[n.parentValue?e("img",{staticClass:"screenshotImg",attrs:{src:n.parentValue}}):n._e()]),e("div",{staticClass:"linebox"},[e("div",{staticClass:"canvasBox"},[e("vue-screenshot",{attrs:{width:500,height:500,imageSrc:n.imageSrc,control:n.control},model:{value:n.parentValue,callback:function(t){n.parentValue=t},expression:"parentValue"}})],1)])]):n._e(),e("div",{staticClass:"messagebox",staticStyle:{width:"90%"},style:{padding:n.windowSize.width>700?"5%":" 10% 5%"}},[e("font",{staticClass:"controlicon icon-cogs"},[n._v(" 点击查看不同的功能")]),e("div",{staticClass:"controlbox"},[e("div",{on:{click:function(t){n.setControl("narrow")}}},[e("i",[n._v("\n          narrow\n        ")]),e("span",{class:{"icon-check-empty":!n.control.narrow,"icon-check":!!n.control.narrow},staticStyle:{"vertical-align":"middle",width:"20px",display:"inline-block"}}),e("span",{staticStyle:{"font-size":"13px"}},[n._v("\n          // 工具栏缩小\n        ")])]),e("div",{on:{click:function(t){n.setControl("clears")}}},[e("i",[n._v("\n          clears\n        ")]),e("span",{class:{"icon-check-empty":!n.control.clears,"icon-check":!!n.control.clears},staticStyle:{"vertical-align":"middle",width:"20px",display:"inline-block"}}),e("span",{staticStyle:{"font-size":"13px"}},[n._v("\n          // 工具栏清除\n        ")])]),e("div",{on:{click:function(t){n.setControl("restore")}}},[e("i",[n._v("\n          restore\n        ")]),e("span",{class:{"icon-check-empty":!n.control.restore,"icon-check":!!n.control.restore},staticStyle:{"vertical-align":"middle",width:"20px",display:"inline-block"}}),e("span",{staticStyle:{"font-size":"13px"}},[n._v("\n          // 工具栏还原\n        ")])]),e("div",{on:{click:function(t){n.setControl("blowup")}}},[e("i",[n._v("\n          blowup\n        ")]),e("span",{class:{"icon-check-empty":!n.control.blowup,"icon-check":!!n.control.blowup},staticStyle:{"vertical-align":"middle",width:"20px",display:"inline-block"}}),e("span",{staticStyle:{"font-size":"13px"}},[n._v("\n          // 工具栏放大\n        ")])]),e("div",{on:{click:function(t){n.setControl("wheel")}}},[e("i",[n._v("\n          wheel\n        ")]),e("span",{class:{"icon-check-empty":!n.control.wheel,"icon-check":!!n.control.wheel},staticStyle:{"vertical-align":"middle",width:"20px",display:"inline-block"}}),e("span",{staticStyle:{"font-size":"13px"}},[n._v("\n          // 滚轮放大缩小\n        ")])]),e("div",{on:{click:function(t){n.setControl("uniform")}}},[e("i",[n._v("\n          uniform\n        ")]),e("span",{class:{"icon-check-empty":!n.control.uniform,"icon-check":!!n.control.uniform},staticStyle:{"vertical-align":"middle",width:"20px",display:"inline-block"}}),e("span",{staticStyle:{"font-size":"13px"}},[n._v("\n          // 截图区域自动回复到区域中央\n        ")])]),e("div",{on:{click:function(t){n.setControl("dragBox")}}},[e("i",[n._v("\n          dragBox\n        ")]),e("span",{class:{"icon-check-empty":!n.control.dragBox,"icon-check":!!n.control.dragBox},staticStyle:{"vertical-align":"middle",width:"20px",display:"inline-block"}}),e("span",{staticStyle:{"font-size":"13px"}},[n._v("\n          // 显示拖拽按钮等\n        ")])])])],1),e("div",{staticClass:"messagebox",style:{padding:n.windowSize.width>700?"5%":" 10% 5%"}},[e("h3",{staticStyle:{width:"100%"}},[n._v("vue-drag-screenshot")]),n._m(0),n._m(1)])],1)},Q=[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",[e("a",{attrs:{href:"https://github.com/wei-zhe/vue-drag-screenshot",target:"_blank"}},[e("i",{staticClass:"iconPosition icon-github"}),n._v(" https://github.com/wei-zhe/vue-drag-screenshot\n      ")])])},function(){var n=this,t=n.$createElement,i=n._self._c||t;return i("div",[n._v("\n      drag-screenshot 插件是一个可自由拖动对现有图片进行截图的插件,"),i("br"),n._v("\n      图片以及选中框均可拖动。每次拖动结束后，或鼠标弹起时可以实时返回当前选中的图片区域"),i("br"),n._v("\n      (默认图片以最大尺寸显示在操作框内)\n      "),i("h4",[n._v("接受参数：")]),i("br"),i("div",{staticStyle:{background:"#282c34",color:"#ff9401","padding-left":"10px"}},[i("br"),n._v("\n        v-model   = 'parentValue' //（必选）接受参数，每次返回的图片保存在v-model变量中"),i("br"),n._v("\n        :width    = '500'         //（必选）定义可操作区域的宽高"),i("br"),n._v("\n        :height   = '500'         //（必选）定义可操作区域的宽高"),i("br"),n._v("\n        :imageSrc = 'imageSrc'    //（非必选）接受一个图片路由默认初始裁剪图片"),i("br"),i("br"),n._v("\n        :control  = 'control'     //（非必选）接受一个对象包含有操作按钮，可以根据定义的顺须排列按钮的顺序，"),i("br"),n._v("\n        不定义既不显示"),i("br"),n._v("\n        control：// 包含以下功能"),i("br"),n._v("\n        narrow   : true,  // 缩小"),i("br"),n._v("\n        clears   : true,  // 清除"),i("br"),n._v("\n        restore  : true,  // 还原"),i("br"),n._v("\n        blowup   : true,  // 放大"),i("br"),n._v("\n        wheel    : true,  // 滚轮缩放 ** 新增 (滚动属性，当滚动属性开启时，支持滚轮放大图片)"),i("br"),n._v("\n        uniform  : true,  // uniform状态 ** 新增 (当uniform属性开启时，每次截取区域截图都会自动居中滚轮放大会由图片转至放大选框)"),i("br"),n._v("\n        dragBox  : {      // 新增拖拽盒子固定尺寸 ** 新增"),i("br"),n._v("\n             width   : 160,  // "),i("br"),n._v("\n             height  : 90,   // "),i("br"),n._v("\n      }                     "),i("br"),i("br")]),i("img",{attrs:{width:"100%",height:"auto",src:e("c212")}})])}],nn={name:"foo",mixins:[J],data:function(){return{imageSrc:e("6060"),parentValue:"",control:{narrow:!1,clears:!1,restore:!1,blowup:!1,wheel:!0,uniform:!0,dragBox:{width:160,height:90}}}},watch:{parentValue:function(n,t){}},mounted:function(){},methods:{setControl:function(n){switch(n){case"narrow":this.control.narrow=!this.control.narrow;break;case"clears":this.control.clears=!this.control.clears;break;case"restore":this.control.restore=!this.control.restore;break;case"blowup":this.control.blowup=!this.control.blowup;break;case"wheel":this.control.wheel=!this.control.wheel;break;case"uniform":this.control.uniform=!this.control.uniform;break;case"dragBox":this.control.dragBox?this.control.dragBox=!1:this.control.dragBox={width:160,height:90};break}}}},tn=nn,en=(e("6858"),Object(p["a"])(tn,G,Q,!1,null,"5e4377c2",null)),rn=en.exports,on=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"me",style:{width:n.windowSize.width>700?.7*n.windowSize.width+"px":.95*n.windowSize.width+"px"}},[e("ReturnIcon",{attrs:{dataArray:[],search:!1},model:{value:n.dataArray,callback:function(t){n.dataArray=t},expression:"dataArray"}}),e("div",{staticClass:"introduction",style:{width:n.windowSize.width>700?.7*n.windowSize.width+"px":.85*n.windowSize.width+"px"}},[n._m(0),e("div",{staticClass:"lineRow"},[n._m(1),e("div",[n._v("\n              "+n._s(n.age)+"\n          ")])]),n._m(2),n._m(3),n._m(4),n._m(5),n._m(6)])],1)},an=[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"lineRow"},[e("span",{staticClass:"keyname"},[e("span",{staticClass:"iconBtn icon-user"})]),e("div",[n._v("\n              魏哲\n          ")])])},function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("span",{staticClass:"keyname"},[e("span",{staticClass:"iconBtn icon-male"})])},function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"lineRow"},[e("span",{staticClass:"keyname"},[e("span",{staticClass:"iconBtn icon-phone-sign"})]),e("div",[n._v("\n              185 - 0300 - 6427\n          ")])])},function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"lineRow"},[e("span",{staticClass:"keyname"},[e("span",{staticClass:"iconBtn icon-envelope-alt"})]),e("div",[n._v("\n              weizhe.wz@qq.com\n          ")])])},function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"lineRow"},[e("span",{staticClass:"keyname"},[e("span",{staticClass:"iconBtn icon-github-sign"})]),e("div",[e("a",{attrs:{href:"https://github.com/wei-zhe"}},[n._v("\n                  https://github.com/wei-zhe\n              ")])])])},function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"lineRow"},[e("span",{staticClass:"keyname"},[e("span",{staticClass:"iconBtn icon-tags"})]),e("div",[n._v("\n              2016-10 至今：深圳市前海手绘科技文化有限公司 "),e("i",{staticClass:"icon-hand-right"}),n._v(" 全栈开发工程师\n          ")])])},function(){var n=this,t=n.$createElement,i=n._self._c||t;return i("div",{staticClass:"mephoto"},[i("img",{attrs:{width:"100",height:"auto",src:e("c6ba")}})])}],ln={name:"me",mixins:[J],data:function(){return{age:"1995-10-11"}},watch:{},mounted:function(){this.age=this.calculatingAge(this.age)},methods:{calculatingAge:function(n){var t="",e=new Date,i=e.getFullYear(),r=e.getMonth()+1,o=e.getDate();r<10&&(r="0"+r),o<10&&(o="0"+o);var a=i+"-"+r+"-"+o;return t=a.substring(0,4)>=n.substring(0,4)&&a.substring(5,7)>=n.substring(5,7)&&a.substring(8,10)>=n.substring(8,10)?i-parseInt(n.substring(0,4)):i-parseInt(n.substring(0,4))-1,t}}},sn=ln,cn=(e("dc3a"),Object(p["a"])(sn,on,an,!1,null,"15348356",null)),un=cn.exports,dn=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"hello",style:{width:n.windowSize.width>700?.8*n.windowSize.width+"px":.95*n.windowSize.width+"px"}},[e("ReturnIcon",{attrs:{dataArray:[],search:!1},model:{value:n.dataArray,callback:function(t){n.dataArray=t},expression:"dataArray"}}),.8*n.windowSize.width>1e3?e("div",{staticClass:"inputTagsBox"},[e("vue-inputTags",{attrs:{width:498,height:150,setting:n.setting},model:{value:n.parentValue,callback:function(t){n.parentValue=t},expression:"parentValue"}})],1):n._e(),e("div",{staticClass:"messagebox",style:{padding:n.windowSize.width>700?"5%":" 10% 5%"}},[e("h3",{staticStyle:{width:"100%"}},[n._v("vue-input-tags")]),n._m(0),n._m(1)])],1)},pn=[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",[e("a",{attrs:{href:"https://github.com/wei-zhe/vue-input-tags",target:"_blank"}},[e("i",{staticClass:"iconPosition icon-github"}),n._v(" https://github.com/wei-zhe/vue-input-tags\n          ")])])},function(){var n=this,t=n.$createElement,i=n._self._c||t;return i("div",{staticStyle:{width:"100%"}},[n._v("\n            input-tags： 一个可以输入标签的vue组建，按回车键以添加标签"),i("br"),i("br"),i("h4",{staticStyle:{width:"100%"}},[n._v("接受参数")]),i("div",{staticStyle:{background:"#282c34",color:"#ff9401","padding-left":"10px"}},[i("br"),n._v('\n              v-model   = "parentValue"   // （必选）绑定数组变量，但是每个变量都必须是对象，并且含有一个title的属性'),i("br"),n._v('\n              :width    = "498"           // （必选）'),i("br"),n._v('\n              :height   = "150"           // （必选）'),i("br"),i("br"),n._v("\n              :setting  = 'setting'       //  设置（非必选）"),i("br"),n._v("\n              setting : { // setting参数\n                  wordage : 8,    //文字数\n                  ArrayLength: 20,    // 标签数\n              },\n              "),i("br"),i("br")]),i("img",{attrs:{width:"100%",src:e("bfe2")}})])}],mn={name:"home",mixins:[J],data:function(){return{parentValue:[{title:"第一个标签first"},{title:"第二个标签"},{title:"第三个标签"},{title:"第四个标签last"}],setting:{wordage:8,ArrayLength:20}}}},fn=mn,hn=(e("fcc6"),Object(p["a"])(fn,dn,pn,!1,null,"a95fc85c",null)),gn=hn.exports,vn=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"threeBtn",style:{width:n.windowSize.width>700?.8*n.windowSize.width+"px":.95*n.windowSize.width+"px"}},[e("ReturnIcon",{attrs:{dataArray:[],search:!1},model:{value:n.dataArray,callback:function(t){n.dataArray=t},expression:"dataArray"}}),.8*n.windowSize.width>1e3?e("div",{staticClass:"threeBtnBox"},[e("ButtonThree",{attrs:{type:"haloBtn",width:"80px",height:"80px",bgColor:"rgb(171, 2, 185)",round:"100%",autofocus:!0}},[n._v("haloBtn")]),e("ButtonThree",{attrs:{width:"300px",type:"threeBtn",bgColor:"#0ba9f7",threeTit:"threeTit"}}),e("ButtonThree",{attrs:{width:"300px",round:"8px"}},[n._v("Hover me I'm awesome")])],1):n._e(),e("div",{staticClass:"messagebox",style:{padding:n.windowSize.width>700?"5%":" 10% 5%"}},[e("h3",{staticStyle:{width:"100%"}},[n._v("vue-3d-button")]),n._m(0),n._m(1)])],1)},bn=[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",[e("a",{attrs:{href:"https://github.com/wei-zhe/vue-mind-mapping",target:"_blank"}},[e("i",{staticClass:"iconPosition icon-github"}),n._v(" https://github.com/wei-zhe/vue-3d-button\n            ")])])},function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticStyle:{width:"100%"}},[e("p",[n._v("一些3d以及特殊效果的按钮")]),e("p",[n._v("## 安装")]),e("pre",{staticStyle:{background:"#282c34",color:"#ff9401","padding-left":"10px"}},[n._v("                npm install vue-3d-button\n            ")]),e("p",[n._v("## 使用")]),e("pre",{staticStyle:{background:"#282c34",color:"#ff9401","padding-left":"10px"}},[n._v('\nimport ButtonThree from \'vue-3d-button\'\n\nVue.use(ButtonThree)\n\n"<""ButtonThree"\' \n    type="haloBtn" \n    width="80px"\n    height="80px" \n    bgColor="rgb(171, 2, 185)"\n    round="100%"\n    :autofocus="true"\n>haloBtn\'"</"ButtonThree>"\n            ')]),e("div",{staticClass:"highlight"},[e("h3",[n._v("type（String）")]),e("p",[n._v("按钮的样式 colorful / threeBtn / haloBtn")]),e("h3",[n._v("width， height（String）")]),e("p",[n._v("可自定义宽高，默认：auto")]),e("h3",[n._v("round （String）")]),e("p",[n._v("可以自定义圆角，默认：2em")]),e("h3",[n._v("nativeType（String）")]),e("p",[n._v("原生type属性 button / submit / reset")]),e("h3",[n._v("bgColor（String）")]),e("p",[n._v("背景颜色 默认：'rgba(247, 35, 89, 1)' 在colorful类型下暂且只支持 rgba，其他情况支持background的所有属性")]),e("h3",[n._v("fontColor（String）")]),e("p",[n._v("文字颜色 '#fff'")]),e("h3",[n._v("fontSize（String）")]),e("p",[n._v("文字大小，默认：'1em'")]),e("h3",[n._v("threeTit（String）")]),e("p",[n._v("3d按钮文案")]),e("h3",[n._v("colorful（String）")]),e("p",[n._v("colorful按钮的hover色 默认：'#4405f7'")]),e("h3",[n._v("autofocus（Boolean）")]),e("p",[n._v("是否默认聚焦")])])])}],yn={name:"threeBtn",mixins:[J],data:function(){return{}}},wn=yn,xn=(e("3a1c"),Object(p["a"])(wn,vn,bn,!1,null,"b61af6d4",null)),Sn=xn.exports,_n=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"file",style:{width:n.windowSize.width>700?.7*n.windowSize.width+"px":.85*n.windowSize.width+"px"}},[e("ReturnIcon",{attrs:{dataArray:n.fileData,search:n.searchJudge},model:{value:n.dataArray,callback:function(t){n.dataArray=t},expression:"dataArray"}}),e("div",{staticClass:"text_body"},[n.textList?n._e():e("div",{staticClass:"markdown",domProps:{innerHTML:n._s(n.dataArray.data)}}),n._l(n.dataArray,function(t){return n.textList?e("div",{staticClass:"text_list"},[t.title?e("div",{staticClass:"title"},[n._v(n._s(t.title))]):n._e(),"jsFs"==n.type&&t.Introduction?e("pre",{staticClass:"introduction"},[n._v(n._s(t.Introduction))]):n._e(),"regular"==n.type&&t.Introduction?e("pre",{staticClass:"introduction_regular"},[n._v(n._s(t.Introduction))]):n._e()]):n._e()}),"regular"==n.type?e("div",{staticClass:"text_list"},[e("div",{staticClass:"title"},[n._v("是否html标签")]),e("pre",{staticClass:"introduction_regular"},[n._v("/<(.*)>.*<\\/\\1>|<(.*) \\/>/")])]):n._e(),"regular"==n.type?e("div",{staticClass:"text_list"},[e("div",{staticClass:"title"},[n._v("日期,如: 2000-01-01")]),e("pre",{staticClass:"introduction_regular"},[n._v("/^\\d{4}(-)\\d{1,2}\\1\\d{1,2}$/")])]):n._e()],2)],1)},kn=[],Cn={name:"jsFsJson",data:function(){return{jsFs:[{title:"isStatic：检测数据是不是除了symbol外的原始数据",Introduction:"function isStatic(value) {\n    return(\n        typeof value === 'string'    ||\n        typeof value === 'number'    ||\n        typeof value === 'boolean'   ||\n        typeof value === 'undefined' ||\n        value === null\n    )\n}"},{title:"isPrimitive：检测数据是不是原始数据",Introduction:"function isPrimitive(value) {\n    return isStatic(value) || typeof value === 'symbol'\n}"},{title:"isObject：判断数据是不是引用类型的数据 (例如： arrays, functions, objects, regexes, new Number(0),以及 new String(''))",Introduction:"function isObject(value) {\n      let type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n}"},{title:'isObjectLike：检查 value 是否是 类对象。 如果一个值是类对象，那么它不应该是 null，而且 typeof 后的结果是 "object"',Introduction:"function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n}"},{title:"getRawType：获取数据类型，返回结果为 Number、String、Object、Array等",Introduction:"function getRawType(value) {\n    return Object.prototype.toString.call(value).slice(8, -1)\n}\n//getoRawType([]) ==> Array"},{title:"isPlainObject：判断数据是不是Object类型的数据",Introduction:"function isPlainObject(obj) {\n    return Object.prototype.toString.call(obj) === '[object Object]'\n}"},{title:"isArray：判断数据是不是数组类型的数据",Introduction:"function isArray(arr) {\n    return Object.prototype.toString.call(arr) === '[object Array]'\n}\n将isArray挂载到Array上\nArray.isArray = Array.isArray || isArray;"},{title:"isRegExp：判断数据是不是正则对象",Introduction:"function isRegExp(value) {\n    return Object.prototype.toString.call(value) === '[object RegExp]'\n}"},{title:"isDate：判断数据是不是时间对象",Introduction:"function isDate(value) {\n    return Object.prototype.toString.call(value) === '[object Date]'\n}"},{title:"isNative：判断 value 是不是浏览器内置函数",Introduction:"内置函数toString后的主体代码块为 [native code] ，而非内置函数则为相关代码，所以非内置函数可以进行拷贝\n(toString后掐头去尾再由Function转)\n\nfunction isNative(value) {\n    return typeof value === 'function' && /native code/.test(value.toString())\n}"},{title:"isFunction：检查 value 是不是函数",Introduction:"function isFunction(value) {\n    return Object.prototype.toString.call(value) === '[object Function]'\n}"},{title:"isLength：检查 value 是否为有效的类数组长度",Introduction:"function isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= Number.MAX_SAFE_INTEGER;\n}"},{title:"isArrayLike：检查 value 是否是类数组",Introduction:"如果一个值被认为是类数组，那么它不是一个函数，并且value.length是个整数，大于等于 0，\n小于或等于 Number.MAX_SAFE_INTEGER。这里字符串也将被当作类数组\n\nfunction isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n}"},{title:"isEmpty：检查 value 是否为空",Introduction:"如果是null，直接返回true；如果是类数组，判断数据长度；如果是Object对象，判断是否具有属性；\n如果是其他数据，直接返回false(也可改为返回true)\n\nfunction isEmpty(value) {\n    if (value == null) {\n        return true;\n    }\n    if (isArrayLike(value)) {\n        return !value.length;\n    }else if(isPlainObject(value)){\n          for (let key in value) {\n            if (hasOwnProperty.call(value, key)) {\n              return false;\n            }\n        }\n    }\n    return false;\n}"},{title:"cached：记忆函数：缓存函数的运算结果",Introduction:"function cached(fn) {\n    let cache = Object.create(null);\n    return function cachedFn(str) {\n        let hit = cache[str];\n        return hit || (cache[str] = fn(str))\n    }\n}"},{title:"camelize：横线转驼峰命名",Introduction:"let camelizeRE = /-(w)/g;\nfunction camelize(str) {\n    return str.replace(camelizeRE, function(_, c) {\n        return c ? c.toUpperCase() : '';\n    })\n}\n//ab-cd-ef ==> abCdEf\n//使用记忆函数\nlet _camelize = cached(camelize)"},{title:"hyphenate：驼峰命名转横线命名：拆分字符串，使用 - 相连，并且转换为小写",Introduction:"let hyphenateRE = /B([A-Z])/g;\nfunction hyphenate(str){\n    return str.replace(hyphenateRE, '-$1').toLowerCase()\n}\n//abCd ==> ab-cd\n//使用记忆函数\nlet _hyphenate = cached(hyphenate);"},{title:"capitalize：字符串首位大写",Introduction:"function capitalize(str){\n    return str.charAt(0).toUpperCase() + str.slice(1)\n}\n// abc ==> Abc\n//使用记忆函数\nlet _capitalize = cached(capitalize)"},{title:"extend：将属性混合到目标对象中",Introduction:"function extend(to, _from) {\n    for(let key in _from) {\n        to[key] = _from[key];\n    }\n    return to\n}"},{title:"Object.assign：对象属性复制，浅拷贝",Introduction:"Object.assign = Object.assign || function(){\n    if(arguments.length == 0) throw new TypeError('Cannot convert undefined or null to object');\n    \n    let target = arguments[0],\n        args = Array.prototype.slice.call(arguments, 1),\n        key\n    args.forEach(function(item){\n        for(key in item){\n            item.hasOwnProperty(key) && ( target[key] = item[key] )\n        }\n    })\n    return target\n}\n\n使用Object.assign可以浅克隆一个对象：\n\nlet clone = Object.assign({}, target)\n\n简单的深克隆可以使用JSON.parse()和JSON.stringify()，这两个api是解析json数据的，所以只能解析除symbol外的\n原始类型及数组和对象\n\nlet clone = JSON.parse( JSON.stringify(target) )"},{title:"clone：克隆数据，可深度克隆",Introduction:"这里列出了原始类型，时间、正则、错误、数组、对象的克隆规则，其他的可自行补充\n\nfunction clone(value, deep){\n    if(isPrimitive(value)){\n        return value\n    }\n    \n    if (isArrayLike(value)) { //是类数组\n        value = Array.prototype.slice.call(value)\n        return value.map(item => deep ? clone(item, deep) : item)\n       }else if(isPlainObject(value)){ //是对象\n           let target = {}, key;\n          for (key in value) {\n            value.hasOwnProperty(key) && ( target[key] = deep ? clone(value[key], deep) : value[key] )\n        }\n    }\n    \n    let type = getRawType(value)\n    \n    switch(type){\n        case 'Date':\n        case 'RegExp': \n        case 'Error': value = new window[type](value); break;\n    }\n    return value\n}"},{title:"识别各种浏览器及平台",Introduction:"//运行环境是浏览器\nlet inBrowser = typeof window !== 'undefined';\n//运行环境是微信\nlet inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nlet weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\n//浏览器 UA 判断\nlet UA = inBrowser && window.navigator.userAgent.toLowerCase();\nlet isIE = UA && /msie|trident/.test(UA);\nlet isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nlet isEdge = UA && UA.indexOf('edge/') > 0;\nlet isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nlet isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nlet isChrome = UA && /chrome/d+/.test(UA) && !isEdge;"},{title:"getExplorerInfo：获取浏览器信息",Introduction:'function getExplorerInfo() {\n    let t = navigator.userAgent.toLowerCase();\n    return 0 <= t.indexOf("msie") ? { //ie < 11\n        type: "IE",\n        version: Number(t.match(/msie ([d]+)/)[1])\n    } : !!t.match(/trident/.+?rv:(([d.]+))/) ? { // ie 11\n        type: "IE",\n        version: 11\n    } : 0 <= t.indexOf("edge") ? {\n        type: "Edge",\n        version: Number(t.match(/edge/([d]+)/)[1])\n    } : 0 <= t.indexOf("firefox") ? {\n        type: "Firefox",\n        version: Number(t.match(/firefox/([d]+)/)[1])\n    } : 0 <= t.indexOf("chrome") ? {\n        type: "Chrome",\n        version: Number(t.match(/chrome/([d]+)/)[1])\n    } : 0 <= t.indexOf("opera") ? {\n        type: "Opera",\n        version: Number(t.match(/opera.([d]+)/)[1])\n    } : 0 <= t.indexOf("Safari") ? {\n        type: "Safari",\n        version: Number(t.match(/version/([d]+)/)[1])\n    } : {\n        type: t,\n        version: -1\n    }\n}'},{title:"isPCBroswer：检测是否为PC端浏览器模式",Introduction:'function isPCBroswer() {\n    let e = navigator.userAgent.toLowerCase()\n        , t = "ipad" == e.match(/ipad/i)\n        , i = "iphone" == e.match(/iphone/i)\n        , r = "midp" == e.match(/midp/i)\n        , n = "rv:1.2.3.4" == e.match(/rv:1.2.3.4/i)\n        , a = "ucweb" == e.match(/ucweb/i)\n        , o = "android" == e.match(/android/i)\n        , s = "windows ce" == e.match(/windows ce/i)\n        , l = "windows mobile" == e.match(/windows mobile/i);\n    return !(t || i || r || n || a || o || s || l)\n}'},{title:"unique：数组去重，返回一个新数组",Introduction:"function unique(arr){\n    if(!isArrayLink(arr)){ //不是类数组对象\n        return arr\n    }\n    let result = []\n    let objarr = []\n    let obj = Object.create(null)\n    \n    arr.forEach(item => {\n        if(isStatic(item)){//是除了symbol外的原始数据\n            let key = item + '_' + getRawType(item);\n            if(!obj[key]){\n                obj[key] = true\n                result.push(item)\n            }\n        }else{//引用类型及symbol\n            if(!objarr.includes(item)){\n                objarr.push(item)\n                result.push(item)\n            }\n        }\n    })\n    \n    return resulte\n}"},{title:"Set简单实现",Introduction:"\nwindow.Set = window.Set || (function () {\n    function Set(arr) {\n        this.items = arr ? unique(arr) : [];\n        this.size = this.items.length; // Array的大小\n    }\n    Set.prototype = {\n        add: function (value) {\n            // 添加元素,若元素已存在,则跳过，返回 Set 结构本身。\n            if (!this.has(value)) {\n                this.items.push(value);\n                this.size++;\n            }\n            return this;\n        },\n        clear: function () {\n            //清除所有成员，没有返回值。\n            this.items = []\n            this.size = 0\n        },\n        delete: function (value) {\n            //删除某个值，返回一个布尔值，表示删除是否成功。\n            return this.items.some((v, i) => {\n                if(v === value){\n                    this.items.splice(i,1)\n                    return true\n                }\n                return false\n            })\n        },\n        has: function (value) {\n            //返回一个布尔值，表示该值是否为Set的成员。\n            return this.items.some(v => v === value)\n        },\n        values: function () {\n            return this.items\n        },\n    }\n\n    return Set;\n}());"},{title:"repeat：生成一个重复的字符串，有n个str组成，可修改为填充为数组等",Introduction:"function repeat(str, n) {\n    let res = '';\n    while(n) {\n        if(n % 2 === 1) {\n            res += str;\n        }\n        if(n > 1) {\n            str += str;\n        }\n        n >>= 1;\n    }\n    return res\n};\n//repeat('123',3) ==> 123123123"},{title:"dateFormater：格式化时间",Introduction:"function dateFormater(formater, t){\n    let date = t ? new Date(t) : new Date(),\n        Y = date.getFullYear() + '',\n        M = date.getMonth() + 1,\n        D = date.getDate(),\n        H = date.getHours(),\n        m = date.getMinutes(),\n        s = date.getSeconds();\n    return formater.replace(/YYYY|yyyy/g,Y)\n        .replace(/YY|yy/g,Y.substr(2,2))\n        .replace(/MM/g,(M<10?'0':'') + M)\n        .replace(/DD/g,(D<10?'0':'') + D)\n        .replace(/HH|hh/g,(H<10?'0':'') + H)\n        .replace(/mm/g,(m<10?'0':'') + m)\n        .replace(/ss/g,(s<10?'0':'') + s)\n}\n// dateFormater('YYYY-MM-DD HH:mm', t) ==> 2019-06-26 18:30\n// dateFormater('YYYYMMDDHHmm', t) ==> 201906261830"},{title:"dateStrForma：将指定字符串由一种时间格式转化为另一种",Introduction:"from的格式应对应str的位置\n          \nfunction dateStrForma(str, from, to){\n    //'20190626' 'YYYYMMDD' 'YYYY年MM月DD日'\n    str += ''\n    let Y = ''\n    if(~(Y = from.indexOf('YYYY'))){\n        Y = str.substr(Y, 4)\n        to = to.replace(/YYYY|yyyy/g,Y)\n    }else if(~(Y = from.indexOf('YY'))){\n        Y = str.substr(Y, 2)\n        to = to.replace(/YY|yy/g,Y)\n    }\n\n    let k,i\n    ['M','D','H','h','m','s'].forEach(s =>{\n        i = from.indexOf(s+s)\n        k = ~i ? str.substr(i, 2) : ''\n        to = to.replace(s+s, k)\n    })\n    return to\n}\n// dateStrForma('20190626', 'YYYYMMDD', 'YYYY年MM月DD日') ==> 2019年06月26日\n// dateStrForma('121220190626', '----YYYYMMDD', 'YYYY年MM月DD日') ==> 2019年06月26日\n// dateStrForma('2019年06月26日', 'YYYY年MM月DD日', 'YYYYMMDD') ==> 20190626\n\n// 一般的也可以使用正则来实现\n//'2019年06月26日'.replace(/(d{4})年(d{2})月(d{2})日/, '$1-$2-$3') ==> 2019-06-26"},{title:"getPropByPath：根据字符串路径获取对象属性 : 'obj[0].count'",Introduction:"function getPropByPath(obj, path, strict) {\n      let tempObj = obj;\n      path = path.replace(/[(w+)]/g, '.$1'); //将[0]转化为.0\n      path = path.replace(/^./, ''); //去除开头的.\n\n      let keyArr = path.split('.'); //根据.切割\n      let i = 0;\n      for (let len = keyArr.length; i < len - 1; ++i) {\n        if (!tempObj && !strict) break;\n        let key = keyArr[i];\n        if (key in tempObj) {\n            tempObj = tempObj[key];\n        } else {\n            if (strict) {//开启严格模式，没找到对应key值，抛出错误\n                throw new Error('please transfer a valid prop path to form item!');\n            }\n            break;\n        }\n      }\n      return {\n        o: tempObj, //原始数据\n        k: keyArr[i], //key值\n        v: tempObj ? tempObj[keyArr[i]] : null // key值对应的值\n      };\n};"},{title:"GetUrlParam：获取Url参数，返回一个对象",Introduction:'function GetUrlParam(){\n    let url = document.location.toString();\n    let arrObj = url.split("?");\n    let params = Object.create(null)\n    if (arrObj.length > 1){\n        arrObj = arrObj[1].split("&");\n        arrObj.forEach(item=>{\n            item = item.split("=");\n            params[item[0]] = item[1]\n        })\n    }\n    return params;\n}\n// ?a=1&b=2&c=3 ==> {a: "1", b: "2", c: "3"}'},{title:"downloadFile：base64数据导出文件，文件下载",Introduction:"function downloadFile(filename, data){\n    let DownloadLink = document.createElement('a');\n\n    if ( DownloadLink ){\n        document.body.appendChild(DownloadLink);\n        DownloadLink.style = 'display: none';\n        DownloadLink.download = filename;\n        DownloadLink.href = data;\n\n        if ( document.createEvent ){\n            let DownloadEvt = document.createEvent('MouseEvents');\n\n            DownloadEvt.initEvent('click', true, false);\n            DownloadLink.dispatchEvent(DownloadEvt);\n        }\n        else if ( document.createEventObject )\n            DownloadLink.fireEvent('onclick');\n        else if (typeof DownloadLink.onclick == 'function' )\n            DownloadLink.onclick();\n\n        document.body.removeChild(DownloadLink);\n    }\n}"},{title:"toFullScreen：全屏",Introduction:'function toFullScreen(){\n    let elem = document.body;\n    elem.webkitRequestFullScreen\n    ? elem.webkitRequestFullScreen()\n    : elem.mozRequestFullScreen\n    ? elem.mozRequestFullScreen()\n    : elem.msRequestFullscreen\n    ? elem.msRequestFullscreen()\n    : elem.requestFullScreen\n    ? elem.requestFullScreen()\n    : alert("浏览器不支持全屏");\n}'},{title:"exitFullscreen：退出全屏",Introduction:'function exitFullscreen(){\n    let elem = parent.document;\n    elem.webkitCancelFullScreen\n    ? elem.webkitCancelFullScreen()\n    : elem.mozCancelFullScreen\n    ? elem.mozCancelFullScreen()\n    : elem.cancelFullScreen\n    ? elem.cancelFullScreen()\n    : elem.msExitFullscreen\n    ? elem.msExitFullscreen()\n    : elem.exitFullscreen\n    ? elem.exitFullscreen()\n    : alert("切换失败,可尝试Esc退出");\n}'},{title:"requestAnimationFrame：window动画",Introduction:"window.requestAnimationFrame = window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    function (callback) {\n        //为了使setTimteout的尽可能的接近每秒60帧的效果\n        window.setTimeout(callback, 1000 / 60);\n    };\n    \nwindow.cancelAnimationFrame = window.cancelAnimationFrame ||\n    Window.webkitCancelAnimationFrame ||\n    window.mozCancelAnimationFrame ||\n    window.msCancelAnimationFrame ||\n    window.oCancelAnimationFrame ||\n    function (id) {\n        //为了使setTimteout的尽可能的接近每秒60帧的效果\n        window.clearTimeout(id);\n    }"},{title:"_isNaN：检查数据是否是非数字值",Introduction:"原生的isNaN会把参数转换成数字(valueof)，而null、true、false以及长度小于等于1的数组(元素为非NaN数据)\n会被转换成数字，这不是我想要的。Symbol类型的数据不具有valueof接口，所以isNaN会抛出错误，这里放在后面，可避免错误\n\nfunction _isNaN(v){\n    return !(typeof v === 'string' || typeof v === 'number') || isNaN(v)\n}"},{title:"max：求取数组中非NaN数据中的最大值",Introduction:"function max(arr){\n    arr = arr.filter(item => !_isNaN(item))\n    return arr.length ? Math.max.apply(null, arr) : undefined\n}\n//max([1, 2, '11', null, 'fdf', []]) ==> 11"},{title:"min：求取数组中非NaN数据中的最小值",Introduction:"function min(arr){\n    arr = arr.filter(item => !_isNaN(item))\n    return arr.length ? Math.min.apply(null, arr) : undefined\n}\n//min([1, 2, '11', null, 'fdf', []]) ==> 1"},{title:"random：返回一个lower - upper之间的随机数",Introduction:"lower、upper无论正负与大小，但必须是非NaN的数据\n\nfunction random(lower, upper){\n    lower = +lower || 0\n    upper = +upper || 0\n    return Math.random() * (upper - lower) + lower;\n}\n//random(0, 0.5) ==> 0.3567039135734613\n//random(2, 1) ===> 1.6718418553475423\n//random(-2, -1) ==> -1.4474325452361945"},{title:"Object.keys：返回一个由一个给定对象的自身可枚举属性组成的数组",Introduction:"Object.keys = Object.keys || function keys(object) {\n    if(object === null || object === undefined){\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    let result = []\n    if(isArrayLike(object) || isPlainObject(object)){\n        for (let key in object) {\n            object.hasOwnProperty(key) && ( result.push(key) )\n        }\n    }\n    return result\n}"},{title:"Object.values：返回一个给定对象自身的所有可枚举属性值的数组",Introduction:"Object.values = Object.values || function values(object) {\n    if(object === null || object === undefined){\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    let result = []\n    if(isArrayLike(object) || isPlainObject(object)){\n        for (let key in object) {\n            object.hasOwnProperty(key) && ( result.push(object[key]) )\n        }\n    }\n    return result\n}"},{title:"arr.fill：使用 value 值来填充 array，从start位置开始, 到end位置结束（但不包含end位置），返回原数组",Introduction:"Array.prototype.fill = Array.prototype.fill || function fill(value, start, end) {\n    let ctx = this\n    let length = ctx.length;\n    \n    start = parseInt(start)\n    if(isNaN(start)){\n        start = 0\n    }else if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      \n      end = parseInt(end)\n      if(isNaN(end) || end > length){\n          end = length\n      }else if (end < 0) {\n        end += length;\n    }\n    \n    while (start < end) {\n        ctx[start++] = value;\n    }\n    return ctx;\n}\n//Array(3).fill(2) ===> [2, 2, 2]"},{title:"arr.includes：用来判断一个数组是否包含一个指定的值，如果是返回 true，否则false，可指定开始查询的位置",Introduction:"\nArray.prototype.includes = Array.prototype.includes || function includes(value, start){\n    let ctx = this\n    let length = ctx.length;\n    \n    start = parseInt(start)\n    if(isNaN(start)){\n        start = 0\n    }else if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n    \n    let index = ctx.indexOf(value)\n    \n    return index >= start;\n}"},{title:"arr.find：返回数组中通过测试（函数fn内判断）的第一个元素的值",Introduction:"Array.prototype.find = Array.prototype.find || function find(fn, ctx){\n    ctx = ctx || this\n    \n    let result;\n    ctx.some((value, index, arr), thisValue) => {\n        return fn(value, index, arr) ? (result = value, true) : false\n    })\n    \n    return result\n}"},{title:"arr.findIndex ：返回数组中通过测试（函数fn内判断）的第一个元素的下标",Introduction:"Array.prototype.findIndex = Array.prototype.findIndex || function findIndex(fn, ctx){\n    ctx = ctx || this\n    \n    let result;\n    ctx.some((value, index, arr), thisValue) => {\n        return fn(value, index, arr) ? (result = index, true) : false\n    })\n    \n    return result\n}"},{title:"performance.timing：利用performance.timing进行性能分析",Introduction:"\nwindow.onload = function(){\n    setTimeout(function(){\n        let t = performance.timing\n        console.log('DNS查询耗时 ：' + (t.domainLookupEnd - t.domainLookupStart).toFixed(0))\n        console.log('TCP链接耗时 ：' + (t.connectEnd - t.connectStart).toFixed(0))\n        console.log('request请求耗时 ：' + (t.responseEnd - t.responseStart).toFixed(0))\n        console.log('解析dom树耗时 ：' + (t.domComplete - t.domInteractive).toFixed(0))\n        console.log('白屏时间 ：' + (t.responseStart - t.navigationStart).toFixed(0))\n        console.log('domready时间 ：' + (t.domContentLoadedEventEnd - t.navigationStart).toFixed(0))\n        console.log('onload时间 ：' + (t.loadEventEnd - t.navigationStart).toFixed(0))\n\n        if(t = performance.memory){\n            console.log('js内存使用占比 ：' + (t.usedJSHeapSize / t.totalJSHeapSize * 100).toFixed(2) + '%')\n        }\n    })\n}"},{title:"禁止某些键盘事件",Introduction:"document.addEventListener('keydown', function(event){\n    return !(\n        112 == event.keyCode || //F1\n        123 == event.keyCode || //F12\n        event.ctrlKey && 82 == event.keyCode || //ctrl + R\n        event.ctrlKey && 78 == event.keyCode || //ctrl + N\n        event.shiftKey && 121 == event.keyCode || //shift + F10\n        event.altKey && 115 == event.keyCode || //alt + F4\n        \"A\" == event.srcElement.tagName && event.shiftKey //shift + 点击a标签\n    ) || (event.returnValue = false)\n});"},{title:"禁止右键、选择、复制",Introduction:"['contextmenu', 'selectstart', 'copy'].forEach(function(ev){\n    document.addEventListener(ev, function(event){\n        return event.returnValue = false\n    })\n});"}]}}},jn=Cn,An=Object(p["a"])(jn,j,A,!1,null,null,null),In=An.exports,zn={name:"regularJson",data:function(){return{regular:[{title:"",Introduction:'var patt1 = new RegExp(/^[A-Z]+$/);\npatt1.test("WWWW")\ntrue'},{title:"手机号",Introduction:"/^1((3[d])|(4[5,6,9])|(5[0-3,5-9])|(6[5-7])|(7[0-8])|(8[1-3,5-8])|(9[1,8,9]))d{8}$/"},{title:"大写字母",Introduction:"/^[A-Z]+$/"},{title:"email地址",Introduction:"/^w+([-+.]w+)*@w+([-.]w+)*.w+([-.]w+)*$/"},{title:"国内座机电话,如: 0341-86091234",Introduction:"/d{3}-d{8}|d{4}-d{7}/"},{title:"身份证号(15位、18位数字)，最后一位是校验位，可能为数字或字符X",Introduction:"/(^d{15}$)|(^d{18}$)|(^d{17}(d|X|x)$)/"},{title:"帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线组合",Introduction:"/^[a-zA-Z][a-zA-Z0-9_]{4,15}$/"},{title:"只包含中文",Introduction:"/^[一-龥]/"},{title:"是否小数",Introduction:"/^d+.d+$/"},{title:"是否电话格式(手机和座机)",Introduction:"/^((0d{2,3}-d{7,8})|(1[345789]d{9}))$/"},{title:"是否8位纯数字",Introduction:"/^[0-9]{8}$/"},{title:"是否qq号格式正确",Introduction:"/^[1-9]*[1-9][0-9]*$/"},{title:"是否由数字和字母组成",Introduction:"/^[A-Za-z0-9]+$/"},{title:"是否小写字母组成",Introduction:"/^[a-z]+$/"},{title:"密码强度正则，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符",Introduction:"/^.*(?=.{6,})(?=.*d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*? ]).*$/"},{title:"用户名正则，4到16位（字母，数字，下划线，减号）",Introduction:"/^[a-zA-Z0-9_-]{4,16}$/"},{title:"ipv4地址正则",Introduction:"/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/"},{title:"16进制颜色",Introduction:"/^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/"},{title:"微信号，6至20位，以字母开头，字母，数字，减号，下划线",Introduction:"/^[a-zA-Z]([-_a-zA-Z0-9]{5,19})+$/"},{title:"中国邮政编码",Introduction:"/^(0[1-7]|1[0-356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[0-5]|8[013-6])d{4}$/"},{title:"只包含中文和数字",Introduction:"/^(([一-龥])|(d))+$/"},{title:"非字母",Introduction:"/[^A-Za-z]/"},{title:"车牌号正则",Introduction:'var cPattern = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$/;\n//输出 true\nconsole.log(cPattern.test("京K39006"));'}]}}},Mn=zn,On=Object(p["a"])(Mn,I,z,!1,null,null,null),En=On.exports,Fn={name:"vueCliJson",data:function(){return{vueCli:{type:"Markdown",data:'<h2>一、调整项目结构</h2>\n<p>首先用 vue-cli 创建一个 default 项目\n\n</p>\n<p>当前的项目目录是这样的：\n</p>\n<pre style="background: #282c34;color: #ff9401;"><code >    \n\n    public\n    src\n    .getignore\n    babel.config.js\n    package.json\n    readme.md\n\n</code></pre>\n<p>首先需要创建一个 <code>packages</code> 目录，用来存放组件\n\n</p>\n<p>然后将 src 目录改为 <code>examples</code> 用作示例\n</p>\n<pre style="background: #282c34;color: #ff9401;"><code >    \n    \n    examples\n    packages\n    public\n    .getignore\n    babel.config.js\n    package.json\n    readme.md\n\n</code></pre>\n<h2>二、修改配置</h2>\n<p>启动项目的时候，默认入口文件是 <code>src/main.js</code>\n\n</p>\n<p>将 <code>src</code> 目录改为 <code>examples</code> 之后，就需要重新配置入口文件\n\n</p>\n<p>在根目录下创建一个 <code>vue.config.js</code> 文件\n\n</p>\n<pre style="background: #282c34;color: #ff9401;"><code >\n    \n    // vue.config.js\n\n    module.exports = {\n      // 将 examples 目录添加为新的页面\n      pages: {\n        index: {\n          // page 的入口\n          entry: \'examples/main.js\',\n          // 模板来源\n          template: \'public/index.html\',\n          // 输出文件名\n          filename: \'index.html\'\n        }\n      }\n    }\n\n</code></pre>\n<p>完成这一步之后就可以正常启动项目了\n\n</p>\n<p>vue-cli 3.x  提供了构建库的命令，所以这里不需要再为 packages 目录配置 webpack\b\n\n\n</p>\n<h2>三、开发组件</h2>\n<p>之前已经创建了一个 packages 目录，用来存放组件\n\n</p>\n<p>该目录下存放每个组件单独的开发目录，和一个 index.js 整合所有组件，并对外导出\n\n</p>\n<p>每个组件都应该归类于单独的目录下，包含其组件源码目录 src，和 index.js 便于外部引用\n\n</p>\n<p>这里以 textarea 组件为例，完整的 packages 目录结构如下：\n</p>\n<pre style="background: #282c34;color: #ff9401;"><code >    \n    \n    packages\n    textarea\n        src\n            main.vue\n        index.js\n    index.js\n\n</code></pre>\n<p><code>textarea/src/main.vue</code> 是组件的开发文件\n\n</p>\n<p><code>需要注意的是，组件必须声明 name，这个 name 就是组件的标签 </code>\n\n</p>\n<p><code>textarea/index.js </code> 用于导出单个组件，如果要做按需引入，也需要在这里配置\n</p>\n<pre style="background: #282c34;color: #ff9401;"><code >\n    \n    // packages/textarea/index.js\n\n    // 导入组件，组件必须声明 name\n    import Textarea from \'./main.vue\'\n\n    // 为组件添加 install 方法，用于按需引入\n    Textarea.install = function (Vue) {\n        Vue.component(Textarea.name, Textarea)\n    }\n\n    export default Textarea\n\n</code></pre>\n<h2>四、整合并导出组件</h2>\n<p>编辑 <code>packages/index.js</code> 文件，实现组件的全局注册\n</p>\n<pre style="background: #282c34;color: #ff9401;"><code >\n\n    // packages / index.js\n\n    // 导入单个组件\n    import Textarea from \'./textarea/index\'\n\n    // 以数组的结构保存组件，便于遍历\n    const components = [\n        Textarea\n    ]\n\n    // 定义 install 方法\n    const install = function (Vue) {\n        if (install.installed) return\n        install.installed = true\n        // 遍历并注册全局组件\n        components.map(component =&gt; {\n            Vue.component(component.name, component)\n        })\n    }\n\n    if (typeof window !== \'undefined\' &amp;&amp; window.Vue) {\n        install(window.Vue)\n    }\n\n    export default {\n        // 导出的对象必须具备一个 install 方法\n        install,\n        // 组件列表\n        ...components\n    }\n\n</code></pre>\n<p>到这里组件就已经开发完毕\n\n</p>\n<p>可以在 examples/main.js 中引入该组件\n</p>\n<pre style="background: #282c34;color: #ff9401;"><code >\n\n    import TagTextarea from \'../packages/index\'\n    Vue.use(TagTextarea)\n\n</code></pre>\n<h2>五、打包组件</h2>\n<p>vue-cli 3.x 提供了一个库文件打包命令\n\n</p>\n<p>主要需要四个参数：\n\n</p>\n<ol>\n<li><p>target: 默认为构建应用，改为 lib 即可启用构建库模式</p>\n</li>\n<li><p>name: 输出文件名</p>\n</li>\n<li><p>dest: 输出目录，默认为 dist，这里我们改为 lib</p>\n</li>\n<li><p>entry: 入口文件路径，默认为 src/App.vue，这里改为 packages/index.js</p>\n</li>\n</ol>\n<p>基于此，在 <code>package.json</code> 里的 <code>scripts</code> 添加一个 <code>lib</code> 命令\n</p>\n<pre style="background: #282c34;color: #ff9401;"><code >\n    \n    // pageage.json\n\n    {\n      "scripts": {\n        "lib": "vue-cli-service build --target lib --name tag-textarea --dest lib packages/index.js"\n      }\n    }\n\n</code></pre>\n<p>然后执行 npm run lib 命令，编译组件\n\n</p>\n<p>最重要的是我们需要先修改package.json文件\n\n</p>\n<pre style="background: #282c34;color: #ff9401;"><code > \n    \n    // 这里注意 每次上到npm上需要更改版本号，不然也会错误\n    "private" :false, \n      // 默认是true 私人的 需要改为false \n      // 不然发不上去 你可以试试..\n\n    "license" : "MIT", // 许可证\n\n    "main"   : "dist/vue-pay-keyboard.js", \n      // 这个超级重要 决定了你 \n      // import xxx from “vue-pay-keyboard” 它默认就会去找\n      // dist下的vue-pay-keyboard 文件\n\n    "files"  : [  \n      "dist",\n      "src"\n      // 用于发布忽略 当我们的包够复杂的时候我们总不能把所有本地开发\n      // 全部都发布上去这个时候我们开启这个选项 意为只发布这两个文件 \n      //  当然我们这个包比较简单 就不开启了\n    ],\n\n    "repository" : { \n      // 配置这个地址存放你项目在github上的位置 也尤为重要\n      "type" : "git",\n      "url"  : "https://github.com/yucccc/vue-pay-keyboard"\n    },\n\n</code></pre>\n<p>然后创建 <code>.npmignore</code> 文件，设置忽略文件\n\n</p>\n<p>该文件的语法和 <code>.gitignore</code> 的语法一样，设置发布到 npm 时忽略哪些目录或文件\n</p>\n<pre style="background: #282c34;color: #ff9401;"><code >    \n    \n    .DS_Store\n    node_modules/\n    examples/\n    packages/\n    public/\n    vue.config.js\n    babel.config.js\n    *.map\n    *.html\n\n    # local env files\n    .env.local\n    .env.*.local\n\n    # Log files\n    npm-debug.log*\n    yarn-debug.log*\n    yarn-error.log*\n\n    # Editor directories and files\n    .idea\n    .vscode\n    *.suo\n    *.ntvs*\n    *.njsproj\n    *.sln\n    *.sw*\n\n</code></pre>\n<h2>添加用户npm</h2>\n<pre style="background: #282c34;color: #ff9401;""><code >    \n    \n    npm adduser \n    Username: your name\n    Password: your password\n    Email: yourmail[@gmail](/user/gmail).com\n\n    npm whoami // 看一看你是谁.. \n\n    npm login // 登陆 \n    npm publish // 发布\n\n</code></pre>'}}}},Tn=Fn,Bn=Object(p["a"])(Tn,M,O,!1,null,null,null),Ln=Bn.exports,Yn={name:"vueCliJson",data:function(){return{css:{type:"Markdown",data:'\n\n<pre>\n将网站分离成组件，而不是页面，并且动态地将那些组件合并到界面上。这种做法灵活，高效并且易维护。\n\n使用 CSS，就可以在 HTML 组件之间到处传递样式，从而以最小的代价来保证一致性的设计。\n这很大程度上要感谢两个 CSS 特性：\n\n<h2>继承，层叠 (CSS 当中的 C，cascade)。</h2>\n</pre>\n\n<pre>\n\n尽管这些特性让我们能够以一种 DRY 且有效率的方式来给 Web 文档添加样式，\n同时也是 CSS 存在的原因，\n但很明显，\n它们已经不再受到青睐。\n在一些 CSS 方法论里，如 BEM 和 Atomic CSS 这些通过程序化封装 CSS 模块的方法，\n许多都尽力去规避或者抑制这些特性。\n这也让开发者有了更多机会去控制他们的 CSS，\n但这仅仅是一种基于频繁干预的专项控制。\n<h3>重新审视继承、层叠和作用域。</h3>\n如何利用这些特性让你的 CSS 代码更简洁，\n实现更好的自适应，\n并且提高页面的可扩展性。\n\n<h2>继承和 font-family</h2>\n尽管许多人在抱怨 CSS 为什么不单单提供一个全局作用域，\n但如果它这么做的话，\n那么就会有很多重复样式了。\n反之，\nCSS 有全局作用域和局部作用域。\n就像在 JavaScript 里，\n局部作用域有权限访问父级和全局作用域，\n而在 CSS 里，\n局部作用域则帮助了继承。\n例如，\n如果给根部（也作：全局）的 html 元素定义一个 font-family 属性，\n那么可以确定这条规则会在文档里应用到所有祖先元素（有一些例外情况，将在下个部分讨论）。\n\n</pre>\n\n<pre style="background: #282c34;color: #ff9401;">\n<code >    \n\n    html {\n        font-family: sans-serif;\n    }\n\n    /*\n    This rule is not needed ↷\n    p {\n        font-family: sans-serif;\n    }\n    */\n\n</code>\n</pre>\n\n<pre>\n就像在 JavaScript 里那样，\n如果我在局部作用域里定义了某些规则，\n那么它们在全局，\n或者说在任意祖先级的作用域中都是无效的，\n只有在它们自己的子作用域里是有效的（就像在上面代码中的 p 元素里）。\n在下个例子当中，1.5 的 line-height 并没有被 html 元素用上。\n但是，p 里的 a 元素则运用上了 line-height 的值。\n</pre>\n\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n\n    html {\n      font-family: sans-serif;\n    }\n\n    p {\n      line-height: 1.5;\n    }\n\n    /*\n    This rule is not needed ↷\n    p a {\n      line-height: 1.5;\n    }\n    */\n\n</code>\n</pre>\n\n<pre>\n继承最大的好处就是你可以用很少量的代码为一致性的可视化设计建立一个基础。而且这些样式甚至将作用到你还没写的 HTML 上。我们在讨论不会过时的代码！\n<h3>替代方法</h3>\n当然有另外一种方式提供公用样式。比如，我可以创建一个 .sans-serif 类...\n</pre>\n\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n\n    .sans-serif {\n      font-family: sans-serif;\n    }\n　　...并将它应用到任意我想要它有这个样式的元素上去：\n    \'<\'p class="sans-serif"\'>\'Lorem ipsum.\'<\'\'/\'p\'>\'\n\n</code>\n</pre>\n<pre>\n\n这种方法提供了一些控制上的权利：我可以准确地挑选决定哪些元素应用这个样式，哪些元素不用。\n\n任何能够控制的机会都是很吸引人的，\n但有一些明显的问题。\n我不仅需要手动地给需要应用样式的元素添加类名（这也意味着我要首先确定这个样式类是什么效果），\n而且在这种情况下也已经有效地放弃了支持动态内容的可能性：\n不管是富文本编辑器还是 Markdown 解析器都没办法给任意的 p 元素提供 sans-serif 类。\nclass="sans-serif" 和 style="font-family: sans-serif" 的用法差不多 - 除了前者意味着要同时在样式表和 \nHTML 当中添加代码。使用继承，我们就可以在其中一个少写点，而另外一个则不用再写了。\n相比给每个字体样式写一个类，我们可以只在一个声明里，给 html 元素添加想要的规则。\n</pre>\n\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n    \n    html {\n      font-size: 125%;\n      font-family: sans-serif;\n      line-height: 1.5;\n      color: #222;\n    }\n\n</code>\n</pre>\n<pre>\ninherit 关键字\n\n某些类型的属性是不会默认继承的，\n而某些元素则不会继承某些属性。\n但是在某些情况下，可以使用 [property name]: inherit 来强制继承。\n\n\n　　 举个例子，input 元素在之前的例子中不会继承任何字体的属性，\ntextarea 也一样不会继承。为了确保所有元素都可以从全局作用域中继承这些属性，\n可以使用通配选择符和 inherit 关键字。这样，就可以最大程度地使用继承了。\n</pre>\n\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n\n    * {\n      font-family: inherit;\n      line-height: inherit;\n      color: inherit;\n    }\n\n    html {\n      font-size: 125%;\n      font-family: sans-serif;\n      line-height: 1.5;\n      color: #222;\n    }\n\n</code>\n</pre>\n<pre>\n注意到我忽略了 font-size。我不想直接继承 font-size 的原因是，它会将 heading 元素（译者注：如 h1）、small 元素以及其他一些元素的默认 user-agent 样式给覆盖掉。这么做我就可以节省一行代码，并且让 user-agent 决定想要什么样式。\n另外一个我不想继承的属性是 font-style：我不想重设 em 的斜体，然后再次添加上它。这将成为无谓的工作并会产生多余的代码。\n现在，所有不管是可以继承或者是强制继承的字体样式都是我所期望的。我们已经花了很长时间只用两个声明区块来传递一个一致性的理念和作用域。从现在开始，除开一些例外情况，没有人会在构造组件的时候还需要去考虑 font-family、line-height 或者 color 了。这就是层叠的由来。\n基于例外的样式\n我可能想要主要的 heading 元素（h1）采用相同的 font-family、color 和 line-height。使用继承就是很好的解决方案，但是我又想要它的 font-size 不一样。因为默认的 user-agent 样式已经给 h1 元素提供了一个大号的 font-size（但这时它就会被我设置的相对基础字体大小为 125% 的样式覆盖掉），可能的话我不需要这里发生覆盖。\n然而，难道我需要调整所有元素的字体大小吗？这时我就利用了全局作用域的优势，在局部作用域里只调整我需要调整的地方。\n</pre>\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n<xmp>\n    * {\n      font-family: inherit;\n      line-height: inherit;\n      color: inherit;\n    }\n\n    html {\n      font-size: 125%;\n      font-family: sans-serif;\n      line-height: 1.5;\n      color: #222;\n    }\n\n    h1 {\n      font-size: 3rem;\n    }\n</xmp>\n</code>\n</pre>\n<pre>\n如果 CSS 元素的样式默认被封装，那么下面的情况就不可能了：需要明确地给 h1 添加所有字体样式。反而，我可以将样式分为几个单独的样式类，然后通过空格分隔来逐一给 h1 添加样式：\n</pre>\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n<xmp>\n    <h1 class="Ff(sans) Fs(3) Lh(1point5) C(darkGrey)">Hello World</h1>\n</xmp>\n</code>\n</pre>\n<pre>\n不管哪种方式，都需要更多的工作，而且最终目的都是一个具备样式的 h1。使用层叠，我已经给大部分元素赋上了想要的样式，并且只在一个方面使得 h1 成为一个例外。层叠作为一个过滤器，意味着样式只在添加新样式覆盖的时候才会发生改变。\n元素样式\n我们已经开了个好头，但想要真正地掌握层叠，还需要尽可能多地给公共元素添加样式。为什么？因为我们的混合组件是由独立的 HTML 元素构成，并且一个屏幕阅读器友好的界面充分利用了语义化结构标记。\n换句话说，让你的界面“分子化”（使用了 atomic 设计术语）的 “atoms” 样式应该在很大程度上可定位并且使用元素选择符。元素选择符的优先级很低，所以它们不会覆盖你之后可能加进来的基于类的样式。\n首先应该做的事情就是给所有你即将需要使用的元素添加样式：\n</pre>\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n<xmp>\n    a { … }\n    p { … }\n    h1, h2, h3 { … }\n    input, textarea { … }\n    /* etc */\n</xmp>\n</code>\n</pre>\n<pre>\n如果你想在无冗余的情况下有个一致性界面的话，那么下一步非常重要：每当你创建一个新组件的时候，如果它采用了一些新元素，那么就用元素选择符来给它们添加样式。现在不是时候去使用限制性、高优先级的选择符，也没有任何需要去编写一个样式类。语义化元素就使用其本身。\n举个例子，如果我还没有给 button 元素 （就像前一个例子）添加样式，并且新组件加入了一个 button 元素，那么这就是一个给整个界面的 button 元素添加样式的好机会。\n</pre>\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n<xmp>\n    button {\n      padding: 0.75em;\n      background: #008;\n      color: #fff;\n    }\n\n    button:focus {\n      outline: 0.25em solid #dd0;\n    }\n</xmp>\n</code>\n</pre>\n<pre>\n现在，当你想要再写一个新组件并且同样加入按钮的时候，就少了一件需要操心的事情了。在不同的命名空间下，不要去重写相同的 CSS，并且也没有类名需要记住或编写。CSS 本就应该总是致力于让事情变得简单和高效 - 它本身就是为此而设计的。\n使用元素选择符有三个主要的优势：\n生成的 HTML 更加简洁（没有多余的各种样式类）。\n生成的样式表更加简洁（样式在组件间共享，不需要在每个组件里重写）。\n生成的添加好样式的界面基于语义化 HTML。\n使用类来专门提供样式常常被定义为“关注点分离”。这是对 W3C 的关注点分离原则的误解。它的目的是用 HTML 和 CSS 样式来描述整个结构。因为类专门是为了样式目的而制定，而且是在结构标记里出现，所以无论它们在哪里使用，技术上都是在打破分离，你不得不改变实质结构来得到样式。\n不管在哪里都不要依赖表面的结构标记（样式类，内联样式），你的 CSS 应该兼容通用的结构和语义化的约定。这就可以简单地扩展内容和功能而无需它也变成一个样式的任务。同样在不同传统语义化结构的项目里，也可以让你的 CSS 变得更加可复用（但是这一点 CSS 的“方法论”可能会有所不同）。\n特殊情况\n在有人指责我过分简单化之前，我意识到界面上不是所有的按钮都做同样的事情，我还意识到做不同事情的按钮在某种程度上可能应该看起来不一样。\n但这并不是说我们就需要用样式类、继承或者层叠来处理了。让一个界面上的按钮看起来完全不一样是在混淆你的用户。为了可访问性和一致性，大多数按钮在外观上只需要通过标签来进行区分。\n</pre>\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n<xmp>\n    <button>create</button>\n\n    <button>edit</button>\n\n    <button>delete</button>\n</xmp>\n</code>\n</pre>\n<pre>\n记住样式并不是视觉上唯一的区分方法。内容同样可以在视觉上区分，而且在一定程度上它更加明确一些，因为你可是在文字上告诉了用户不同的地方。\n大多数情况下，单独使用样式来区分内容都不是必要或者正确的。通常，样式区分应该是附加条件，比如一个红色背景或者一个带图标的文本标签。文本标签对那些使用声音激活的软件有着特定的效果：当说出 “red button” 或者 “button with cross icon” 的时候并没有引起软件的识别时。\n我将在“工具类”部分探讨关于添加细微差别到看起来相似的元素上的话题。\n标签属性\n语义化 HTML 并不仅仅关于元素。标签属性定义类型、样式属性和状态。这些对可访问性来说也很重要，所以它们需要写在 HTML 里合适的地方。而且因为都在 HTML 里，所以它们还提供了做样式钩子的机会。\n举个例子，input 元素有一个 type 属性，那么你应该想要利用它的好处，还有像 aria-invalid 属性是用来描述状态的。\n</pre>\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n<xmp>\n    input, textarea {\n      border: 2px solid;\n      padding: 0.5rem;\n    }\n\n    [aria-invalid] {\n      border-color: #c00;\n      padding-right: 1.5rem;\n      background: url(images/cross.svg) no-repeat center 0.5em;\n    }\n</xmp>\n</code>\n</pre>\n<pre>\n这里有几点需要注意一下：\n这里我不需要设置 color、font-family 或者 line-height，因为这些都从 html 上继承了，得益于上面使用的 inherit 关键字。如果我想在整个应用的层面上改变 font-family，只需要在 html 那一块对其中一个声明进行编辑就可以了。\nborder 的颜色关联到 color，所以它同样是从全局 color 中继承。我只需声明 border 的宽度和风格。\n[aria-invalid] 属性选择符是没有限制的。这意味着它有着更好的应用（它可以同时作用在 input 和 textarea 选择符）以及最低的优先级。简单的属性选择符和类选择符有着同样的优先级。无限制使用它们意味着之后任何写在层叠下的样式类都可以覆盖它们。\nBEM 方法论通过一个修饰符类来解决这个问题，比如 input--invalid。但是考虑到无效的状态应该只在可通信的时候起作用，input--invalid 还是一定的冗余。换句话说，aria-invalid 属性不得不写在那里，所以这个样式类的目的在哪里？\n只写 HTML\n在层叠方面关于大多数元素和属性选择符我绝对喜欢的事情是：组件的构造变成更少地了解公司或组织的命名约定，更多地关注 HTML。任何精通写出像样 HTML 的开发者被分配到项目中时，都会从已经写到位的继承样式当中获益。这些样式显著地减少了读文档和写新 CSS 的需要。大多数情况下，他们可以只写一些死记硬背应该知道的（meta）语言。Tim Baxter 同样为此在 Meaningful CSS: Style It Like You Mean It 里写了一个案例。\n布局\n目前为止，我们还没有写任何指定组件的 CSS，但这并不是说我们还没有添加任何相关样式。所有组件都是 HTML 元素的组合。形成更复杂的组件主要是靠这些元素的组合顺序和排列。\n这就给我们引出了布局这个概念。\n主要我们需要处理流式布局 - 连续块元素之间的间距。你可能已经注意到目前为止我没有给任何元素设置任何的外边距。那是因为外边距不应该考虑成一个元素的属性，而应该是元素上下文的属性。也就是说，它们应该只在遇到元素的时候才起作用。\n幸运的是，直接相邻选择符可以准确地描述这种关系。利用层叠，我们可以使用一个统一默认贯穿所有连续块级元素的选择符，只有少数例外情况。\n</pre>\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n<xmp>\n    * {\n      margin: 0;\n    }\n\n    * + * {\n      margin-top: 1.5em;\n    }\n\n    body, br, li, dt, dd, th, td, option {\n      margin-top: 0;\n    }\n</xmp>\n</code>\n</pre>\n<pre>\n　　使用优先级极低的猫头鹰选择符确保了任意元素（除了那些公共的例外情况）都通过一行来间隔。这意味着在所有情况下都会有一个默认的白色间隔，所有编写组件流内容的开发者都将有一个合理的起点。\n　　在大多数情况下，外边距只会关心它们自己。不过因为低优先级，很轻易就可以在需要的时候覆盖掉那基础的一行间隔。举个例子，我可能想要去掉标签和其相关元素之间的间隔，好表示它们是一对的。在下面的示例里，任意在标签之后的元素（input、textarea、select 等等）都不会有间隔。\n</pre>\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n<xmp>\n    label {\n      display: block\n    }\n\n    label + * {\n      margin-top: 0.5rem;\n    }\n</xmp>\n</code>\n</pre>\n<pre>\n　　再次，使用层叠意味着只需要在需要的时候写一些特定的样式就可以了，而其他的元素都符合一个合理的基准。\n　　需要注意的是，因为外边距只在元素之间出现，所以它们不会和可能包括在容器内的内边距重叠。这也是一件不需要担心或者预防的事情。\n　　还注意到不管你是否决定引入包装元素都得到了同样的间隔。就是说，你可以像下面这样做并实现相同的布局 - 外边距在 div 之间出现比在标签和输入框之间出现要好得多。\n</pre>\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n<xmp>\n    <form>\n      <div>\n        <label for="one">Label one</label>\n        <input id="one" name="one" type="text">\n      </div>\n      <div>\n        <label for="two">Label two</label>\n        <input id="two" name="two" type="text">\n      </div>\n      <button type="submit">Submit</button>\n    </form>\n</xmp>\n</code>\n</pre>\n<pre>\n    用像 atomic CSS 这样的方法能实现同样的效果，只需组合各种外边距相关的样式类并在各种情况下手动添加它们，包括被 * + * 隐式控制的 first-child 这种例外情况：\n</pre>\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n<xmp>\n    <form class="Mtop(1point5)">\n      <div class="Mtop(0)">\n        <label for="one" class="Mtop(0)">Label one</label>\n        <input id="one" name="one" type="text" class="Mtop(0point75)">\n      </div>\n      <div class="Mtop(1point5)">\n        <label for="two" class="Mtop(0)">Label two</label>\n        <input id="two" name="two" type="text" class="Mtop(0point75)">\n      </div>\n      <button type="submit" class="Mtop(1point5)">Submit</button>\n    </form>\n</xmp>\n</code>\n</pre>\n<pre>\n　　记住如果坚持使用 atomic CSS 的话，像上面那么写只会覆盖到顶部外边距的情况。你必须还要为 color、background-color 以及其他属性建立独立的样式类，因为 atomic CSS 不会控制继承或者元素选择符。\n</pre>\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n<xmp>\n    <form class="Mtop(1point5) Bdc(#ccc) P(1point5)">\n      <div class="Mtop(0)">\n        <label for="one" class="Mtop(0) C(brandColor) Fs(bold)">Label one</label>\n        <input id="one" name="one" type="text" class="Mtop(0point75) C(brandColor) Bdc(#fff) B(2) P(1)">\n      </div>\n      <div class="Mtop(1point5)">\n        <label for="two" class="Mtop(0) C(brandColor) Fs(bold)">Label two</label>\n        <input id="two" name="two" type="text" class="Mtop(0point75) C(brandColor) Bdc(#fff) B(2) P(1)">\n      </div>\n      <button type="submit" class="Mtop(1point5) C(#fff) Bdc(blue) P(1)">Submit</button>\n    </form>\n</xmp>\n</code>\n</pre>\n<pre>\n　　Atomic CSS 使开发者可以直接控制样式而不再使用内联样式，内联样式不像样式类一样可以复用。通过为各种独立的属性提供样式类，减少了样式表中的重复声明。\n　　但是，它需要直接介入标记从而实现这些目的。这就要求学习并投入它那冗长的 API，同样还需要编写大量额外的 HTML 代码。\n　　相反，如果只用来对任意 HTML 元素及其空间关系设计样式的话，那么 CSS “方法论”就要被大范围弃用了。使用一致性设计的系统有着很大的优势，相比一个叠加样式的 HTML 系统更方便考虑和分开管理。\n　　无论如何，下面是我们的 CSS 架构和流式布局内容解决方案应该具备的特征：\n全局（html）样式并强制继承，\n流式布局方法及部分例外（使用猫头鹰选择符），\n元素及属性样式。\n　　我们还没有编写一个特定组件或者构思一个 CSS 样式类，但我们大部分的样式都已经写好了，前提是如果我们能够将样式类写得合理且可复用。\n　　工具类\n　　关于样式类它们有一个全局作用域：在 HTML 里任何地方使用，它们都会被关联的 CSS 所影响。对大多数人来说，这都被看做一个弊端，因为两个独立的开发者有可能以同样的命名来编写一个样式类，从而互相影响工作。\n　　CSS modules 最近被用来解决这种情况，通过以程序来生成唯一的样式类名，绑定到它们的局部或组件作用域当中。\n</pre>\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n<xmp>\n    \x3c!-- my module\'s button --\x3e\n    <button class="button_dysuhe027653">Press me</button>\n\n    \x3c!-- their module\'s button --\x3e\n    <button class="button_hydsth971283">Hit me</button>\n</xmp>\n</code>\n</pre>\n<pre>\n　　忽略掉生成代码的丑陋，你应该能够看到两个独立组件之间的不同，并且可以轻易地放在一起：唯一的标识符被用来区分同类的样式。在这么多更好的努力和冗余代码下，结果界面将要么不一致，要么一致。\n　　没有理由对公共元素来进行唯一性区分。你应该对元素类型添加样式，而不是元素实例。谨记 “class” 意味着“某种可能存在很多的东西的类型”。换句话说，所有的样式类都应该是工具类：全局可复用。\n　　当然，在这个示例里，总之 .button 类是冗余的：我们可以用 button 元素选择符来替代。但是如果有一种特殊类型的按钮呢？比如，我们可能编写一个 .danger 类来指明这个按钮是做危险性操作，比如删除数据：\n</pre>\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n<xmp>\n    .danger {\n      background: #c00;\n      color: #fff;\n    }\n</xmp>\n</code>\n</pre>\n<pre>\n　　因为类选择符的优先级比元素选择符的优先级高，而和属性选择符优先级相同，所以这种方式添加在样式表后面的样式规则会覆盖前面元素和属性选择符的规则。所以，危险按钮会以红色背景配白色文本出现，但它其他的属性，比如内边距，聚焦轮廓以及外边距都会通过之前的流式布局方法添加，保持不变。\n</pre>\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n<xmp>\n    <button class="danger">delete</button>\n</xmp>\n</code>\n</pre>\n<pre>\n　　如果多位开发人员长时间在同样的代码基础上工作，那么偶尔就会发生命名冲突。但是有几种避免这种情况的方法，比如，噢，我不太知道，但对于你想要采用的名称我建议首先做一个文本搜索，看看是否已经存在了。因为你不知道，可能已经有人解决了你正在定位的问题。\n　　局部作用域的各种工具类\n　　对于工具类来说，我最喜欢做的事情就是把它们设置在容器上，然后用这个钩子去影响内部子元素的布局。举个例子，我可以快速对任意元素设置一个等间隔、响应式以及居中的布局。\n</pre>\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n<xmp>\n    .centered {\n      text-align: center;\n      margin-bottom: -1rem; /* adjusts for leftover bottom margin of children */\n    }\n\n    .centered > * {\n      display: inline-block;\n      margin: 0 0.5rem 1rem;\n    }\n</xmp>\n</code>\n</pre>\n<pre>\n　　使用这个方法，我可以把列表项、按钮、按钮组合以及链接等随便什么元素居中展示。全靠 > * 的使用，在这个作用域中，它意味着带有 .centered 样式的元素下最近的子元素将会采用这些样式，并且还继承全局和父元素的样式。\n　　而且我调整了外边距，好让元素可以自由进行包裹，而且不会破坏使用 * + * 选择符设置的垂直设定。这少量的代码通过对不同元素设置一个局部作用域，就提供了一个通用、响应式的布局解决方案。\n　　我的一个小型（压缩后 93B）的基于 flexbox 网格布局系统 就是一个类似这种方法的工具类。它高度可复用，而且因为它使用了 flex-basis，所以不需要断点干预。我只是用了 flexbox 布局的方法。\n</pre>\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n<xmp>\n    .fukol-grid {\n      display: flex;\n      flex-wrap: wrap;\n      margin: -0.5em; /* adjusting for gutters */\n    }\n\n    .fukol-grid > * {\n      flex: 1 0 5em; /* The 5em part is the basis (ideal width) */\n      margin: 0.5em; /* Half the gutter value */\n    }\n</xmp>\n</code>\n</pre>\n<pre>\n　　使用 BEM 的方法，你会被鼓励在每个网格项上放置一个明确的“元素”样式类：\n</pre>\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n<xmp>\n    <div class="fukol"> \x3c!-- the outer container, needed for vertical rhythm --\x3e\n      <ul class="fukol-grid">\n        <li class="fukol-grid__item"></li>\n        <li class="fukol-grid__item"></li>\n        <li class="fukol-grid__item"></li>\n        <li class="fukol-grid__item"></li>\n      </ul>\n    </div>\n</xmp>\n</code>\n</pre>\n<pre>\n　　但这不是必要的。只需一个标识符去实例化本地作用域。这里的列表项相比起我版本当中的列表项，不再受外部影响的保护，也不应该被 > * 所影响。仅有的区别就是充斥了大量样式类的标记。\n　　所以，现在我们已经开始合并样式类，但只在通用性上合并，和它们所预期的效果一样。我们仍然还没有独立地给复杂组件添加样式。反而，我们在以一种可复用的方式解决一些系统性的问题。当然，你将需要在注释里写清楚这些样式类是如何使用的。\n　　像这些的工具类同时采用了 CSS 的全局作用域、局部作用域、继承以及层叠的优点。这些样式类可以在各个地方使用，它们实例化局部作用域从而只影响它们的子元素，它们从父级或全局作用域中继承没有设置在自身的样式，而且我们没有过度使用元素或类选择符。\n　　下面是现在我们的层叠看上去的样子：\n全局（html）样式和强制性继承，\n流式布局方法和一些例外（使用猫头鹰选择符），\n元素和属性样式，\n通用的工具类。\n　　当然，可能没有必要去编写所有这些示例工具类。重点是，如果在使用组件的时候出现了需求，那么解决方案应该对所有组件都有效才行。一定要总是站在系统层面去思考。\n　　特定组件样式\n　　我们从一开始就已经给组件添加了样式，并且学习样式结合组件的方法，所以很多人有可能会忽略掉马上要讲到这个部分。但值得说明的是，任何不是从其他组件中创建的组件（甚至包括单个 HTML 元素）都是有必要存在的。它们是使用 ID 选择符的组件，以及有可能成为系统问题的风险。\n　　事实上，一个好的实践是只使用 ID 来给复杂组件标识（“molecules”、“organisms”），并且不在 CSS 里使用这些 ID。比如，你可以在登录表单组件上写一个 #login，那么你就不应该在 CSS 里以元素、属性或者流式布局方法的样式来使用 #login，即使你可能会发现你在创造一个或两个可以在其他表单组件里使用的通用工具类。\n　　如果你确实使用了 #login，那么它只会影响那个组件。值得提醒的是如果这么做，那么你就已经偏离了开发一个设计系统方向，并且朝着只有不停纠结像素的冗长代码前进。\n　　结论\n　　当我告诉人们我不使用诸如 BEM 这样的方法论或者 CSS 模块这样的工具时，多数人会认为我会编写下面这样的 CSS：\n</pre>\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n<xmp>\n    header nav ul li {\n      display: inline-block;\n    }\n\n    header nav ul li a {\n      background: #008;\n    }\n</xmp>\n</code>\n</pre>\n<pre>\n　　我没有这样做。一份清晰的陈述已经在这儿了，还有我们需要小心去避免的事情也已经阐述了。只是想说明 BEM（还有 OOCSS、SMACSS、atomic CSS 等）并不是避免复杂、不可能管理的 CSS 的唯一方法。\n　　为了解决优先级问题，许多方法论几乎都选择了使用类选择符。问题在于这产生了大量的样式类：让 HTML 标记变得臃肿的各种神奇代码，以及失去了对文档的注意力，这些都会让新来的开发者对他们所处的系统感到困扰和迷惑。\n　　通过大量地使用样式类，你还需要管理一个样式系统，而且这个系统很大程度上是和 HTML 系统分离的。这种不太合适的所谓“关注点分离”可以造成冗余，甚至更糟糕，导致不可访问性：有可能会在可访问的状态下影响一个视觉上的样式：\n</pre>\n<pre style="background: #282c34;color: #ff9401;">\n<code >\n<xmp>\n    <input id="my-text" aria-invalid="false" class="text-input--invalid" />\n</xmp>\n</code>\n</pre>\n<pre>\n　　为了替换掉大量的编写和各种样式类，我找到了其他一些方法：\n为了一致性掌握继承去设置一个前置条件；\n充分使用元素和属性选择符去支持透明度和基于标准的组合样式；\n使用简便的的流式布局系统；\n合并一些高度通用的工具类，解决影响多元素的共同布局问题。\n　　所有这些方法都是为了创建一个设计系统，使编写一个新组件变得更简单，以及当项目成熟的时候，减少添加新的 CSS 代码的依赖。并且这并不是获益于严格的命名和合并，反而是因为缺少了它们。\n　　可能你会对我在这里推荐的特殊技巧并不感冒，但我还是希望这篇文章至少可以让你重新思考一下组件是什么。它们不是你独立创建的东西。有的时候，在标准 HTML 元素的情况下，它们甚至不是你所创建的东西。你的组件从其他组件拿来的东西越多，那么界面的可访问性和视觉上的一致性就会变得更好，并且最后会用更少的 CSS 去实现它们。\n　　（这些问题）CSS 并没有太多过错。事实上，让你做很多事情是非常好的，我们只是没有利用罢了。s\n</pre>\n\n'}}}},Dn=Yn,$n=Object(p["a"])(Dn,E,F,!1,null,null,null),Nn=$n.exports,Hn={name:"file",mixins:[J,In,En,Ln,Nn],data:function(){return{type:"jsFs",fileData:[],searchJudge:!0,textList:!0}},mounted:function(){switch(this.type=this.$route.query.type||"jsFs",this.dataArray=this.fileData=this[this.type]||this.jsFs,this.type){case"vueCli":case"css":this.searchJudge=!1,this.textList=!1;break;default:this.searchJudge=!0,this.textList=!0}}},Pn=Hn,Rn=(e("1bc9"),Object(p["a"])(Pn,_n,kn,!1,null,null,null)),Vn=Rn.exports,qn=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"mind",style:{width:n.windowSize.width>700?.8*n.windowSize.width+"px":.95*n.windowSize.width+"px"}},[e("ReturnIcon",{attrs:{dataArray:[],search:!1},model:{value:n.dataArray,callback:function(t){n.dataArray=t},expression:"dataArray"}}),.8*n.windowSize.width>1e3?e("div",{staticClass:"mind_box"},[e("MindMapping",{attrs:{width:n.width,height:n.height,spacing:50,topColor:"#646464",fontSize:30,fontLength:10},model:{value:n.testData,callback:function(t){n.testData=t},expression:"testData"}})],1):n._e(),e("div",{staticClass:"messagebox",style:{padding:n.windowSize.width>700?"5%":" 10% 5%"}},[e("div",{staticClass:"mind_message",staticStyle:{background:"#282c34",color:"#ff9401",padding:"10px"}},[n._v("\n          "+n._s(n.testData)+"\n        ")]),e("h3",{staticStyle:{width:"100%"}},[n._v("vue-mind-mapping")]),n._m(0),n._m(1)])],1)},Un=[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",[e("a",{attrs:{href:"https://github.com/wei-zhe/vue-mind-mapping",target:"_blank"}},[e("i",{staticClass:"iconPosition icon-github"}),n._v(" https://github.com/wei-zhe/vue-mind-mapping\n          ")])])},function(){var n=this,t=n.$createElement,i=n._self._c||t;return i("div",{staticStyle:{width:"100%"}},[i("p",[n._v("一个类似思维导图的小工具")]),i("p",[n._v("## 安装")]),i("p",{staticStyle:{color:"red"}},[n._v("使用之前一定要安装svg.js")]),i("pre",{staticStyle:{background:"#282c34",color:"#ff9401","padding-left":"10px"}},[n._v('\n  svg.js\n      npm install svg.js\n      import svgJs from "svg.js/dist/svg"\n\n      export default {\n          install(Vue) {\n              Vue.prototype.$svg = svgJs\n          }\n      }\n\n  main.js\n      import svgJs from "./svg.js"\n      Vue.use(svgJs);\n\n            ')]),i("p",[n._v("## 使用")]),i("pre",{staticStyle:{background:"#282c34",color:"#ff9401","padding-left":"10px"}},[n._v("\n  npm install vue-mind-mapping -S\n  \n  import vuemindmapping from 'vue-mind-mapping'\n  Vue.use(vuemindmapping)\n\n  '<''MindMapping' \n    \"v-model     = 'testData'\"\n    \":width      = 'width'\"\n    \":height     = 'height'\"\n    \":spacing    = '50'\"\n    \"topColor    = '#646464'\"\n    \":fontSize   = '30'\"\n    \":fontLength = '10'\"\n    \":onlyColor  = 'true'\"\n  \"><'/'MindMapping>\"\n            ")]),i("div",{staticClass:"highlight"},[i("h3",[n._v("width， height")]),i("p",[n._v("初始宽高")]),i("h3",[n._v("spacing")]),i("p",[n._v("标题之间的横向间距，纵向间距是标题的高度")]),i("h3",[n._v("topColor")]),i("p",[n._v("主标题的颜色以及箭头颜色")]),i("h3",[n._v("fontSize")]),i("p",[n._v("标题文字大小，下一级标题文字大小是上一级的0.8最小是14")]),i("h3",[n._v("fontLength")]),i("p",[n._v("每个标题显示的字数显示不玩的会用...代替")]),i("h3",[n._v("onlyColor")]),i("p",[n._v("设置图标颜色为单一颜色")]),i("h2",[n._v("v-model")]),i("p",[n._v("会返回一个json字符串，代表生成的导图数据格式，\n            要是想要加载生成的导图，需要一开始传入导图的json字符串")]),i("pre",{staticStyle:{background:"#282c34",color:"#ff9401","padding-left":"10px"}},[n._v('\n  \'{\n      "x":5,\n      "y":400,\n      "title":"主标题",\n      "index":0,\n      "color":"#646464",\n      "size":30,\n      "sprites":[\n          {\n              "x":185,\n              "y":-171.0703125,\n              "title":"随机分配颜色",\n              "index":1,\n              "color":"#e78ed9",\n              "size":24,\n              "sprites":[ ]\n          }\n      ]\n  }\',\n            ')]),i("h3",[n._v("Props")]),i("pre",{staticStyle:{background:"#282c34",color:"#ff9401","padding-left":"10px"}},[n._v("\n  name\t      type      default\ttype\n  value\t      String            必传\n  width\t      Number\t500   \t选择参数，也可以不传\n  height      Number\t500    \t选择参数，也可以不传\n  spacing     Number\t50     \t选择参数，也可以不传\n  topColor    String\t#ff2970\t选择参数，也可以不传\n  fontSize    Number\t40     \t选择参数，也可以不传\n  fontLength  Number\t7     \t选择参数，也可以不传\n  onlyColor   Boolean\tfalse   选择参数，也可以不传\n\n            ")])]),i("img",{attrs:{width:"100%",src:e("6e26")}})])}],Jn={name:"mind",mixins:[J],data:function(){return{testData:'{"x":5,"y":400,"title":"主标题","index":0,"color":"#646464","size":30,"sprites":[{"x":185,"y":-171.0703125,"title":"随机分配颜色","index":1,"color":"#e78ed9","size":24,"sprites":[]},{"x":185,"y":-95.0390625,"title":"横向间距可调节","index":1,"color":"#5119cb","size":24,"sprites":[{"x":263,"y":16.0078125,"title":"字体大小是上一级的0.8","index":2,"color":"#5119cb","size":19,"sprites":[{"x":292.40625,"y":13.5,"title":"标题文字显示有长度","index":3,"color":"#5119cb","size":15,"sprites":[]}]}]},{"x":185,"y":-19.0078125,"title":"纵向间距是标题的高","index":1,"color":"#fc7d28","size":24,"sprites":[]},{"x":185,"y":57.0234375,"title":"主要依赖svg.js","index":1,"color":"#5c3039","size":24,"sprites":[{"x":259.046875,"y":16.078125,"title":"需要安装是svgjs","index":2,"color":"#5c3039","size":19,"sprites":[]}]},{"x":185,"y":133.0546875,"title":"箭头颜色是和主标题颜色一致","index":1,"color":"#8523fa","size":24,"sprites":[{"x":355.015625,"y":16.0546875,"title":"用json保存所有的属性","index":2,"color":"#8523fa","size":19,"sprites":[]}]},{"x":185,"y":209.0859375,"title":"更新会保存所有属性","index":1,"color":"#1a4a27","size":24,"sprites":[{"x":311,"y":16.0078125,"title":"再次打开没有属性变化","index":2,"color":"#1a4a27","size":19,"sprites":[]}]}]}',width:500,height:500,parentValue:[{title:"第一个标签first"},{title:"第二个标签"},{title:"第三个标签"},{title:"第四个标签last"}],setting:{wordage:8,ArrayLength:20}}}},Wn=Jn,Zn=(e("5f4e"),Object(p["a"])(Wn,qn,Un,!1,null,"0520c6e8",null)),Xn=Zn.exports;o["a"].use(B["a"]);var Kn=new B["a"]({routes:[{path:"",component:K,meta:{title:"ADE",judgeBrowser:!0}},{path:"/foo",component:rn,meta:{title:"Vue drag screenshot",judgeBrowser:!0}},{path:"/me",component:un,meta:{title:"我的",judgeBrowser:!0}},{path:"/inputTags",component:gn,meta:{title:"Vue input tags",judgeBrowser:!0}},{path:"/mind",component:Xn,meta:{title:"Vue mind mapping",judgeBrowser:!0}},{path:"/threeBtn",component:Sn,meta:{title:"Vue 3d button",judgeBrowser:!0}},{path:"/file",component:Vn,meta:{title:"技术文章",judgeBrowser:!0}}]}),Gn=e("0420"),Qn=e.n(Gn),nt=e("41c8"),tt=e.n(nt),et=e("1929"),it=e.n(et),rt={install:function(n){n.prototype.$svg=it.a}},ot=e("0842"),at=e.n(ot),lt=e("89b4"),st=e.n(lt);o["a"].use(st.a),o["a"].use(at.a),o["a"].use(rt),o["a"].use(Qn.a),o["a"].use(tt.a),o["a"].config.productionTip=!1,o["a"].prototype.$baseUrl="/",Kn.beforeEach(function(n,t,e){window.document.title=n.meta.title,e()}),new o["a"]({store:T,router:Kn,render:function(n){return n(S)}}).$mount("#app")},"571a":function(n,t,e){"use strict";var i=e("be41"),r=e.n(i);r.a},"5c0b":function(n,t,e){"use strict";var i=e("5e27"),r=e.n(i);r.a},"5e27":function(n,t,e){},"5f4e":function(n,t,e){"use strict";var i=e("27c9"),r=e.n(i);r.a},6060:function(n,t,e){n.exports=e.p+"img/logoOne.edc45035.png"},"62b8":function(n,t,e){},6397:function(n,t,e){},6858:function(n,t,e){"use strict";var i=e("963e"),r=e.n(i);r.a},"6e26":function(n,t,e){n.exports=e.p+"img/mind.e5c28ad1.jpeg"},"72e7":function(n,t,e){"use strict";var i=e("795b"),r=e.n(i);r.a},"795b":function(n,t,e){},"827f":function(n,t,e){},8630:function(n,t,e){n.exports=e.p+"img/01.acbdd6dd.png"},"963e":function(n,t,e){},add7:function(n,t,e){n.exports=e.p+"img/03.7d31b494.png"},be41:function(n,t,e){},bfe2:function(n,t,e){n.exports=e.p+"img/inputtags.6098103c.jpg"},c212:function(n,t,e){n.exports=e.p+"img/action.9b6bf6aa.png"},c5df:function(n,t,e){n.exports=e.p+"img/05.507782d4.png"},c6ba:function(n,t,e){n.exports=e.p+"img/me.4857d81f.jpeg"},d2f5:function(n,t,e){n.exports=e.p+"img/06.60689eb7.png"},dc3a:function(n,t,e){"use strict";var i=e("06df"),r=e.n(i);r.a},f403:function(n,t,e){},fcc6:function(n,t,e){"use strict";var i=e("6397"),r=e.n(i);r.a}});
//# sourceMappingURL=app.29be8e72.js.map